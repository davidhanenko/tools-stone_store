{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/items/main-page/ItemsMainPage.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsStyles';\nconst PRODUCTS = gql`\n  query PRODUCTS($service: String) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        category: items_categories(limit: 1) {\n          single_item: single_items {\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ItemsMainPage({}) {\n  var _data$services$0$item;\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(PRODUCTS, {\n    variables: {\n      service: 'products'\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  const SLIDE_COUNT = data === null || data === void 0 ? void 0 : (_data$services$0$item = data.services[0].items) === null || _data$services$0$item === void 0 ? void 0 : _data$services$0$item.length;\n  const slides = Array.from(Array(SLIDE_COUNT).keys()); // func from Embla Carousel docs\n\n  const itemsByIndex = index => {\n    var _data$services$, _data$services$2, _data$services$2$item;\n\n    return data === null || data === void 0 ? void 0 : (_data$services$ = data.services[0]) === null || _data$services$ === void 0 ? void 0 : _data$services$.items[index % (data === null || data === void 0 ? void 0 : (_data$services$2 = data.services[0]) === null || _data$services$2 === void 0 ? void 0 : (_data$services$2$item = _data$services$2.items) === null || _data$services$2$item === void 0 ? void 0 : _data$services$2$item.length)];\n  };\n\n  return /*#__PURE__*/_jsxDEV(ItemsMainPageStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(ItemsSlider, {\n      slides: slides,\n      itemsByIndex: itemsByIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/items/main-page/ItemsMainPage.js"],"names":["gql","useQuery","ItemsSlider","ItemsMainPageStyles","PRODUCTS","ItemsMainPage","data","error","loading","variables","service","message","SLIDE_COUNT","services","items","length","slides","Array","from","keys","itemsByIndex","index"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,MAAMC,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASK,aAAT,CAAuB,EAAvB,EAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACG,QAAD,EAAW;AAClDK,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE;AADA;AADuC,GAAX,CAAzC;AAMA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,QAAMC,WAAW,GAAGN,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEO,QAAN,CAAe,CAAf,EAAkBC,KAArB,0DAAG,sBAAyBC,MAA7C;AAEA,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACL,WAAD,CAAL,CAAmBO,IAAnB,EAAX,CAAf,CAbwC,CAcxC;;AACA,QAAMC,YAAY,GAAGC,KAAK;AAAA;;AAAA,WAAIf,IAAJ,aAAIA,IAAJ,0CAAIA,IAAI,CAAEO,QAAN,CAAe,CAAf,CAAJ,oDAAI,gBAAmBC,KAAnB,CAAyBO,KAAK,IAAGf,IAAH,aAAGA,IAAH,2CAAGA,IAAI,CAAEO,QAAN,CAAe,CAAf,CAAH,8EAAG,iBAAmBC,KAAtB,0DAAG,sBAA0BC,MAA7B,CAA9B,CAAJ;AAAA,GAA1B;;AAEA,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,IAAI,iBAAI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEU,MAArB;AAA6B,MAAA,YAAY,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsStyles';\n\nconst PRODUCTS = gql`\n  query PRODUCTS($service: String) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        category: items_categories(limit: 1) {\n          single_item: single_items {\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ItemsMainPage({}) {\n  const { data, error, loading } = useQuery(PRODUCTS, {\n    variables: {\n      service: 'products',\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n \n\n  const SLIDE_COUNT = data?.services[0].items?.length;\n\n  const slides = Array.from(Array(SLIDE_COUNT).keys());\n  // func from Embla Carousel docs\n  const itemsByIndex = index => data?.services[0]?.items[index % data?.services[0]?.items?.length];\n\n  return (\n    <ItemsMainPageStyles>\n      <h2>Products</h2>\n      {data && <ItemsSlider slides={slides} itemsByIndex={itemsByIndex} />}\n    </ItemsMainPageStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}