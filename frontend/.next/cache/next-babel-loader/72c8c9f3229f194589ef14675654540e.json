{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/navbar/Nav.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Link from 'next/link';\nimport Hamburger from 'hamburger-react';\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport NavDropdown from './NavDropdown';\nimport { NavStyles, NavButtonStyles } from './NavStyles';\nimport Search from './Search';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nconst PRODUCTS = gql`\n  query PRODUCTS1 {\n    services {\n      service\n      id\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\nexport default function Nav({\n  page\n}) {\n  console.log(props);\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(PRODUCTS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this); // services to spread in nav\n\n  const services = data === null || data === void 0 ? void 0 : data.services;\n  const navRef = useRef();\n  const {\n    navOpen,\n    toggleNav,\n    closeSideNav,\n    navBtnClick,\n    setNavBtnClick\n  } = useNav();\n  const {\n    width\n  } = useWindowDimensions(); // close toggled nav on click outside\n\n  useEffect(() => {\n    //  click outside nav handler\n    const handleClickOutside = event => {\n      if (navOpen && !navRef.current.contains(event.target)) {\n        closeSideNav();\n      }\n    }; //  click outside nav listener\n\n\n    document.addEventListener('mousedown', handleClickOutside); // cleanup the event listener\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [navOpen]); // close nav when width more than 850px\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (width >= 850) {\n      closeSideNav();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n  const router = useRouter();\n  const LinkBtn = /*#__PURE__*/React.forwardRef(({\n    href,\n    title\n  }, ref) => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      onClick: () => closeSideNav(),\n      ref: ref,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavStyles, {\n      open: navOpen,\n      btnClick: navBtnClick,\n      width: width,\n      ref: navRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          passHref: true,\n          className: formatUrlToRoute(router.asPath.split('/')[1]) == '' ? 'active-link link-item' : 'link-item',\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'home'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/about\",\n          className: \"link-item\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'about'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), services.map(service => /*#__PURE__*/_jsxDEV(Link, {\n          href: `/${service.service}`,\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: service.service,\n            items: service.items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, service.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/gallery\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'gallery'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/contacts\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'contacts'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButtonStyles, {\n        onClick: () => setNavBtnClick(true),\n        children: /*#__PURE__*/_jsxDEV(Hamburger, {\n          hideOutline: false,\n          label: \"Show menu\",\n          toggled: navOpen,\n          toggle: toggleNav\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/navbar/Nav.js"],"names":["React","useEffect","useRef","useRouter","gql","useQuery","Link","Hamburger","useNav","useWindowDimensions","NavDropdown","NavStyles","NavButtonStyles","Search","formatUrlToRoute","PRODUCTS","Nav","page","console","log","props","data","error","loading","message","services","navRef","navOpen","toggleNav","closeSideNav","navBtnClick","setNavBtnClick","width","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","isMounted","router","LinkBtn","forwardRef","href","title","ref","asPath","split","map","service","items","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Link from 'next/link';\nimport Hamburger from 'hamburger-react';\n\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\n\nimport NavDropdown from './NavDropdown';\nimport { NavStyles, NavButtonStyles } from './NavStyles';\nimport Search from './Search';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\n\nconst PRODUCTS = gql`\n  query PRODUCTS1 {\n    services {\n      service\n      id\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport default function Nav({page}) {\n  console.log(props);\n  const { data, error, loading } = useQuery(PRODUCTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  // services to spread in nav\n  const services = data?.services;\n\nconst navRef = useRef();\n\n  const { navOpen, toggleNav, closeSideNav, navBtnClick, setNavBtnClick } =\n    useNav();\n\n  const { width } = useWindowDimensions();\n\n  // close toggled nav on click outside\n  useEffect(() => {\n    //  click outside nav handler\n    const handleClickOutside = event => {\n      if (\n        navOpen &&\n        !navRef.current.contains(event.target)\n      ) {\n        closeSideNav();\n      }\n    };\n\n    //  click outside nav listener\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // cleanup the event listener\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [navOpen]);\n\n  // close nav when width more than 850px\n  useEffect(() => {\n    let isMounted = true;\n    if (width >= 850) {\n      closeSideNav();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n\n const router = useRouter();\n\n\n  const LinkBtn = React.forwardRef(({ href, title }, ref) => {\n    return (\n      <a href={href} onClick={() => closeSideNav()} ref={ref}>\n        {title}\n      </a>\n    );\n  });\n\n  \n  return (\n    <>\n      <NavStyles\n        open={navOpen}\n        btnClick={navBtnClick}\n        width={width}\n        ref={navRef}\n      >\n        <div className='nav-links'>\n          <Link\n            href='/'\n            passHref\n            className={\n              formatUrlToRoute(router.asPath.split('/')[1]) == ''\n                ? 'active-link link-item'\n                : 'link-item'\n            }\n          >\n            <LinkBtn title={'home'} />\n          </Link>\n          <Link href='/about' className='link-item' passHref>\n            <LinkBtn title={'about'} />\n          </Link>\n          {services.map(service => (\n            <Link key={service.id} href={`/${service.service}`} passHref>\n              <NavDropdown title={service.service} items={service.items} />\n            </Link>\n          ))}\n          <Link href='/gallery' passHref>\n            <LinkBtn title={'gallery'} />\n          </Link>\n          <Link href='/contacts' passHref>\n            <LinkBtn title={'contacts'} />\n          </Link>\n        </div>\n        <NavButtonStyles onClick={() => setNavBtnClick(true)}>\n          <Hamburger\n            hideOutline={false}\n            label='Show menu'\n            toggled={navOpen}\n            toggle={toggleNav}\n          />\n        </NavButtonStyles>\n      </NavStyles>\n      <Search />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}