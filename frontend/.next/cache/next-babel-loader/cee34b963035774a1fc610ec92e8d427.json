{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ITEMS_COLLECTION($collection: String!) {\\n    items_category: itemsCategories(where: { category_title: $collection }) {\\n      category: category_title\\n      id\\n      single_items {\\n        id\\n        item_title\\n        price\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\nimport SubCategoryCollection from '../../../../components/items/items-page/sub-category-collection/SubCategoryCollection';\nvar ITEMS_COLLECTION = gql(_templateObject());\nexport default function ProductsPage(_ref) {\n  var query = _ref.query;\n\n  var _useQuery = useQuery(ITEMS_COLLECTION, {\n    variables: {\n      collection: formatUrlToDbName(query.collection)\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(SubCategoryCollection, {\n      itemsCollection: data === null || data === void 0 ? void 0 : data.items_category[0],\n      items: query.products,\n      collection: query.collection\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}