{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { MdSearch } from 'react-icons/md';\nimport { useScroll } from '../../lib/useScroll';\nimport { SearchStyles } from './SearchStyles';\nexport default function Search({\n  offset\n}) {\n  const {\n    0: isScroll,\n    1: setIsScroll\n  } = useState(false);\n  const {\n    scrollRef\n  } = useScroll();\n\n  const handleScrollPos = () => {\n    if (window.pageYOffset > 10 && window.pageYOffset < window.innerHeight) {\n      window.pageYOffset !== scrollRef.current.scrollPos && window.pageYOffset - scrollRef.current.scrollPos > 100 && setIsScroll(true);\n      setTimeout(() => {\n        setIsScroll(false);\n        scrollRef.current.scrollPos = window.pageYOffset;\n      }, 300);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScrollPos);\n    return () => window.removeEventListener('scroll', handleScrollPos);\n  });\n  return /*#__PURE__*/_jsxs(SearchStyles, {\n    scroll: isScroll,\n    children: [/*#__PURE__*/_jsx(MdSearch, {\n      className: \"search-icon\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}