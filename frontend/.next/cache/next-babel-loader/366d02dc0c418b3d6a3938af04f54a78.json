{"ast":null,"code":"/* eslint-disable no-inner-declarations */\nimport { useState, useEffect } from 'react';\n\nfunction debounce(fn, ms) {\n  let timer;\n  return _ => {\n    clearTimeout(timer);\n    timer = setTimeout(_ => {\n      timer = null;\n      fn.apply(this, ...arguments);\n    }, ms);\n  };\n}\n\nexport default function useWindowDimensions() {\n  // const hasWindow = typeof window !== 'undefined';\n  // function getWindowDimensions() {\n  //   const width = hasWindow ? window.innerWidth : null;\n  //   const height = hasWindow ? window.innerHeight : null;\n  //   return {\n  //     width,\n  //     height,\n  //   };\n  // }\n  const {\n    0: windowDimensions,\n    1: setWindowDimensions\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }, 0);\n    window.addEventListener('resize', debouncedHandleResize);\n    return () => window.removeEventListener('resize', debouncedHandleResize);\n  }, []);\n  return windowDimensions;\n}","map":null,"metadata":{},"sourceType":"module"}