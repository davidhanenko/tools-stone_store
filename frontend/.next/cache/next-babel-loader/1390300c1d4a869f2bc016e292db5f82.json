{"ast":null,"code":"import _objectDestructuringEmpty from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/menu/ItemsMenu.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SERVICE_MENU_QUERY($service: String!) {\\n    services(where: { service: $service }) {\\n      items {\\n        id\\n        title\\n        items_categories {\\n          id\\n          category: category_title\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { Slant as Hamburger } from 'hamburger-react';\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport MenuLink from './MenuLink';\nimport MenuTree from './MenuTree';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\nvar SERVICE_MENU_QUERY = gql(_templateObject());\nexport default function ItemsMenu(_ref) {\n  _s();\n\n  var _data$services$,\n      _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var service = router.asPath.split('/')[1];\n\n  var _useQuery = useQuery(SERVICE_MENU_QUERY, {\n    variables: {\n      service: service\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMenu = useMenu(),\n      isOpen = _useMenu.isOpen,\n      setOpen = _useMenu.setOpen,\n      btnClicked = _useMenu.btnClicked,\n      setBtnClicked = _useMenu.setBtnClicked,\n      closeMenu = _useMenu.closeMenu; // ref for side menu container\n\n\n  var sideMenuRef = useRef();\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  useEffect(function () {\n    //  click outside side menu handler\n    var handleClickOutside = function handleClickOutside(event) {\n      if (!sideMenuRef.current.contains(event.target)) {\n        setOpen(false);\n      }\n    }; //  click outside side menu listener\n\n\n    document.addEventListener('mousedown', handleClickOutside); // cleanup the event listener\n\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]); // close side menu if width is more than 850px\n\n  useEffect(function () {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 21\n  }, this);\n  var menuItems = data === null || data === void 0 ? void 0 : (_data$services$ = data.services[0]) === null || _data$services$ === void 0 ? void 0 : _data$services$.items;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ItemsMenuStyles, {\n      menuOpen: isOpen,\n      btnClicked: btnClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsxDEV(MenuButtonStyles, {\n          onClick: function onClick() {\n            return setBtnClicked(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(Hamburger, {\n            hideOutline: false,\n            label: \"Show menu\",\n            toggled: isOpen,\n            toggle: setOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"main-title\",\n          children: service\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-links\",\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(function (menuItem) {\n          return /*#__PURE__*/_jsxDEV(MenuLink, {\n            menuItem: menuItem\n          }, menuItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-links\",\n        ref: sideMenuRef,\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(function (menuItem) {\n          return /*#__PURE__*/_jsxDEV(MenuLink, {\n            menuItem: menuItem,\n            onClick: function onClick() {\n              setOpen(false);\n            }\n          }, menuItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuTree, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ItemsMenu, \"llKNsTcFY0ph59ua3LRBly7wH1Q=\", false, function () {\n  return [useRouter, useQuery, useMenu, useWindowDimensions];\n});\n\n_c = ItemsMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsMenu\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/menu/ItemsMenu.js"],"names":["gql","useQuery","useEffect","useRef","useRouter","Slant","Hamburger","useMenu","useWindowDimensions","MenuLink","MenuTree","ItemsMenuStyles","MenuButtonStyles","SERVICE_MENU_QUERY","ItemsMenu","router","service","asPath","split","variables","data","error","loading","isOpen","setOpen","btnClicked","setBtnClicked","closeMenu","sideMenuRef","width","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","message","menuItems","services","items","map","menuItem","id"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { Slant as Hamburger } from 'hamburger-react';\n\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\n\nimport MenuLink from './MenuLink';\nimport MenuTree from './MenuTree';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\n\nconst SERVICE_MENU_QUERY = gql`\n  query SERVICE_MENU_QUERY($service: String!) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        items_categories {\n          id\n          category: category_title\n        }\n      }\n    }\n  }\n`;\n\nexport default function ItemsMenu({}) {\n  const router = useRouter();\n  const service = router.asPath.split('/')[1];\n\n  const { data, error, loading } = useQuery(SERVICE_MENU_QUERY, {\n    variables: {\n      service: service,\n    },\n  });\n\n  const { isOpen, setOpen, btnClicked, setBtnClicked, closeMenu } = useMenu();\n\n  // ref for side menu container\n  const sideMenuRef = useRef();\n\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    //  click outside side menu handler\n    const handleClickOutside = event => {\n      if (\n\n        !sideMenuRef.current.contains(event.target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    //  click outside side menu listener\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // cleanup the event listener\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  // close side menu if width is more than 850px\n  useEffect(() => {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const menuItems = data?.services[0]?.items;\n\n  return (\n    <>\n      <ItemsMenuStyles menuOpen={isOpen} btnClicked={btnClicked}>\n        <div className='menu-header'>\n          <MenuButtonStyles onClick={() => setBtnClicked(true)}>\n            <Hamburger\n              hideOutline={false}\n              label='Show menu'\n              toggled={isOpen}\n              toggle={setOpen}\n            />\n          </MenuButtonStyles>\n\n          <h3 className='main-title'>{service}</h3>\n        </div>\n\n        {/* menu container*/}\n        <div className='menu-links'>\n          {menuItems?.map(menuItem => (\n            <MenuLink menuItem={menuItem} key={menuItem.id} />\n          ))}\n        </div>\n\n        {/* sidebar menu */}\n        <div className='side-menu-links' ref={sideMenuRef}>\n          {menuItems?.map(menuItem => (\n            <MenuLink\n              menuItem={menuItem}\n              key={menuItem.id}\n              onClick={() => {\n                setOpen(false);\n              }}\n            />\n          ))}\n        </div>\n      </ItemsMenuStyles>\n\n      <MenuTree />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}