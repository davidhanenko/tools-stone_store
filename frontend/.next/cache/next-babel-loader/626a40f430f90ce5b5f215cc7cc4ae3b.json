{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js\";\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nimport { DropdownBtnStyles, DropdownItemStyles, DropdownMenuStyles, NavDropdownStyles } from './NavDropdownStyles';\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  href,\n  onClick,\n  item\n}, ref) => {\n  const {\n    closeSideNav\n  } = useNav();\n  return /*#__PURE__*/_jsxDEV(DropdownItemStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      onClick: () => closeSideNav(),\n      ref: ref,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n});\nconst NavDropdown = /*#__PURE__*/React.forwardRef(function NavDropdown(props, ref) {\n  var _props$items;\n\n  const {\n    0: dropdownOpen,\n    1: setDropdownOpen\n  } = useState(false);\n  const {\n    navOpen\n  } = useNav();\n  const {\n    width\n  } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(NavDropdownStyles, {\n    onMouseOver: mouseEnter,\n    onMouseLeave: mouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btns-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        ref: ref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownBtnStyles, {\n        type: \"button\",\n        onClick: showDropdown,\n        disabled: !navOpen || width > 850,\n        children: dropdownOpen && navOpen ? /*#__PURE__*/_jsxDEV(MdExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(MdExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(DropdownMenuStyles, {\n      children: props === null || props === void 0 ? void 0 : (_props$items = props.items) === null || _props$items === void 0 ? void 0 : _props$items.map(item => {\n        var _product;\n\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: `/products/[${items}]`,\n            query: {\n              items: `${formatUrlToRoute(product.product_title)}`\n            }\n          },\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n            item: (_product = product) === null || _product === void 0 ? void 0 : _product.product_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n});\nexport default NavDropdown;","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js"],"names":["React","useState","useEffect","Link","MdExpandMore","MdExpandLess","useNav","useWindowDimensions","formatUrlToRoute","DropdownBtnStyles","DropdownItemStyles","DropdownMenuStyles","NavDropdownStyles","DropdownItem","forwardRef","href","onClick","item","ref","closeSideNav","NavDropdown","props","dropdownOpen","setDropdownOpen","navOpen","width","showDropdown","mouseEnter","mouseLeave","isMounted","title","items","map","pathname","query","product","product_title","id"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\n\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\n\nimport {\n  DropdownBtnStyles,\n  DropdownItemStyles,\n  DropdownMenuStyles,\n  NavDropdownStyles,\n} from './NavDropdownStyles';\n\nconst DropdownItem = React.forwardRef(({ href, onClick, item }, ref) => {\n  const { closeSideNav } = useNav();\n  return (\n    <DropdownItemStyles>\n      <a href={href} onClick={() => closeSideNav()} ref={ref}>\n        {item}\n      </a>\n    </DropdownItemStyles>\n  );\n});\n\nconst NavDropdown = React.forwardRef(function NavDropdown(props, ref) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const { navOpen } = useNav();\n  const { width } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n\n  return (\n    <NavDropdownStyles onMouseOver={mouseEnter} onMouseLeave={mouseLeave}>\n      <div className='dropdown-btns-group'>\n        <a href={props.href} ref={ref}>\n          {props.title}\n        </a>\n        <DropdownBtnStyles\n          type='button'\n          onClick={showDropdown}\n          disabled={!navOpen || width > 850}\n        >\n          {dropdownOpen && navOpen ? <MdExpandLess /> : <MdExpandMore />}\n        </DropdownBtnStyles>\n      </div>\n\n      {dropdownOpen && (\n        <DropdownMenuStyles>\n          {props?.items?.map(item => (\n            <Link\n              href={{\n                pathname: `/products/[${items}]`,\n                query: {\n                  items: `${formatUrlToRoute(product.product_title)}`,\n                },\n              }}\n              key={product.id}\n              passHref\n            >\n              {/* <DropdownItemStyles>\n              <a>{product.product_title.toLowerCase()}</a>\n              </DropdownItemStyles> */}\n              <DropdownItem item={product?.product_title} />\n            </Link>\n          ))}\n        </DropdownMenuStyles>\n      )}\n    </NavDropdownStyles>\n  );\n});\n\nexport default NavDropdown;\n"]},"metadata":{},"sourceType":"module"}