{"ast":null,"code":"import _objectDestructuringEmpty from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SERVICE_MENU_QUERY($service: String!) {\\n    services(where: { service: $service }) {\\n      items {\\n        id\\n        title\\n        items_categories {\\n          id\\n          category: category_title\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Slant as Hamburger } from 'hamburger-react';\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport MenuLink from './MenuLink';\nimport MenuTree from './MenuTree';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\nvar SERVICE_MENU_QUERY = gql(_templateObject());\nexport default function ItemsMenu(_ref) {\n  var _data$services$;\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var service = router.asPath.split('/')[1];\n\n  var _useQuery = useQuery(SERVICE_MENU_QUERY, {\n    variables: {\n      service: service\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMenu = useMenu(),\n      isOpen = _useMenu.isOpen,\n      setOpen = _useMenu.setOpen,\n      btnClicked = _useMenu.btnClicked,\n      setBtnClicked = _useMenu.setBtnClicked,\n      closeMenu = _useMenu.closeMenu;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  useEffect(function () {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var menuItems = data === null || data === void 0 ? void 0 : (_data$services$ = data.services[0]) === null || _data$services$ === void 0 ? void 0 : _data$services$.items;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(ItemsMenuStyles, {\n      menuOpen: isOpen,\n      btnClicked: btnClicked,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsx(MenuButtonStyles, {\n          onClick: function onClick() {\n            return setBtnClicked(true);\n          },\n          children: /*#__PURE__*/_jsx(Hamburger, {\n            hideOutline: false,\n            label: \"Show menu\",\n            toggled: isOpen,\n            toggle: setOpen\n          })\n        }), /*#__PURE__*/_jsx(\"h3\", {\n          className: \"main-title\",\n          children: service\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"menu-links\",\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(function (menuItem) {\n          return /*#__PURE__*/_jsx(MenuLink, {\n            menuItem: menuItem\n          }, menuItem.id);\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"side-menu-links\",\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(function (menuItem) {\n          return /*#__PURE__*/_jsx(MenuLink, {\n            menuItem: menuItem,\n            onClick: function onClick() {\n              setOpen(false);\n            }\n          }, menuItem.id);\n        })\n      })]\n    }), /*#__PURE__*/_jsx(MenuTree, {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}