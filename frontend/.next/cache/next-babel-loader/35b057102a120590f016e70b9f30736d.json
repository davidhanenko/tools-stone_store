{"ast":null,"code":"import _regeneratorRuntime from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/index.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS {\\n    products {\\n      id\\n      title: product_title\\n      category: product_categories(limit: 1) {\\n        single_item: single_products(limit: 1) {\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Items from '../../../components/items/items-page/Items';\nimport MenuLayout from '../../../components/layouts/MenuLayout';\nimport MainLayout from '../../../components/layouts/MainLayout';\nvar ALL_PRODUCTS = gql(_templateObject());\nexport default function ProductsCategoryPage(_ref, props) {\n  _s();\n\n  var query = _ref.query;\n  console.log(props);\n\n  var _useQuery = useQuery(ALL_PRODUCTS),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this); // const products = data.products;\n\n  return /*#__PURE__*/_jsxDEV(Items, {\n    itemsCategory: query.products\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ProductsCategoryPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductsCategoryPage;\n;\nexport function getInitialProps(_x) {\n  return _getInitialProps.apply(this, arguments);\n}\n\nfunction _getInitialProps() {\n  _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var layout;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            layout = 'menu';\n            return _context.abrupt(\"return\", {\n              props: {\n                layout: layout\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getInitialProps.apply(this, arguments);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsCategoryPage\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/index.js"],"names":["gql","useQuery","Items","MenuLayout","MainLayout","ALL_PRODUCTS","ProductsCategoryPage","props","query","console","log","data","error","loading","message","products","getInitialProps","layout"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA,IAAMC,YAAY,GAAGL,GAAH,mBAAlB;AAgBA,eAAe,SAASM,oBAAT,OAAyCC,KAAzC,EAAgD;AAAA;;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAD6D,kBAE5BN,QAAQ,CAACI,YAAD,CAFoB;AAAA,MAErDM,IAFqD,aAErDA,IAFqD;AAAA,MAE/CC,KAF+C,aAE/CA,KAF+C;AAAA,MAExCC,OAFwC,aAExCA,OAFwC;;AAI7D,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CALkD,CAO7D;;AAEA,sBAAO,QAAC,KAAD;AAAO,IAAA,aAAa,EAAEN,KAAK,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAVuBT,oB;UAEWL,Q;;;KAFXK,oB;AAUvB;AAGD,gBAAsBU,eAAtB;AAAA;AAAA;;;8EAAO,iBAA+BT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACDU,YAAAA,MADC,GACQ,MADR;AAAA,6CAEE;AACLV,cAAAA,KAAK,EAAE;AACLU,gBAAAA,MAAM,EAANA;AADK;AADF,aAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport Items from '../../../components/items/items-page/Items';\nimport MenuLayout from '../../../components/layouts/MenuLayout';\nimport MainLayout from '../../../components/layouts/MainLayout';\n\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS {\n    products {\n      id\n      title: product_title\n      category: product_categories(limit: 1) {\n        single_item: single_products(limit: 1) {\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProductsCategoryPage({ query }, props) {\n  console.log(props);\n  const { data, error, loading } = useQuery(ALL_PRODUCTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  // const products = data.products;\n\n  return <Items itemsCategory={query.products} />;\n};\n\n\nexport async function getInitialProps(props) {\n  let layout = 'menu';\n  return {\n    props: {\n      layout,\n    },\n  };\n}"]},"metadata":{},"sourceType":"module"}