{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nimport { DropdownBtnStyles, DropdownItemStyles, DropdownMenuStyles, NavDropdownStyles } from './NavDropdownStyles'; // navbar dropdown item\n\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  href,\n  onClick,\n  dropDownItem\n}, ref) => {\n  const {\n    closeSideNav\n  } = useNav();\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(DropdownItemStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      onClick: () => closeSideNav(),\n      ref: ref,\n      className: router.asPath.split('/')[1] == dropDownItem ? 'active-link link-item' : 'link-item',\n      children: dropDownItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n});\nconst NavDropdown = /*#__PURE__*/React.forwardRef(function NavDropdown(props, ref) {\n  var _props$items;\n\n  const {\n    0: dropdownOpen,\n    1: setDropdownOpen\n  } = useState(false);\n  const {\n    navOpen\n  } = useNav();\n  const {\n    width\n  } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const handleMouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const handleMouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(NavDropdownStyles, {\n    onMouseOver: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btns-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        ref: ref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownBtnStyles, {\n        type: \"button\",\n        onClick: showDropdown,\n        disabled: !navOpen || width > 850,\n        children: dropdownOpen && navOpen ? /*#__PURE__*/_jsxDEV(MdExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(MdExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(DropdownMenuStyles, {\n      isDropdownOpen: dropdownOpen,\n      children: props === null || props === void 0 ? void 0 : (_props$items = props.items) === null || _props$items === void 0 ? void 0 : _props$items.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: `/products/[items]`,\n          query: {\n            items: `${formatUrlToRoute(item.title)}`\n          }\n        },\n        passHref: true,\n        children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n          dropDownItem: item === null || item === void 0 ? void 0 : item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n});\nexport default NavDropdown;","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js"],"names":["React","useState","useEffect","useRouter","Link","MdExpandMore","MdExpandLess","useNav","useWindowDimensions","formatUrlToRoute","DropdownBtnStyles","DropdownItemStyles","DropdownMenuStyles","NavDropdownStyles","DropdownItem","forwardRef","href","onClick","dropDownItem","ref","closeSideNav","router","asPath","split","NavDropdown","props","dropdownOpen","setDropdownOpen","navOpen","width","showDropdown","handleMouseEnter","handleMouseLeave","isMounted","title","items","map","item","pathname","query","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AAEA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,iBAJF,QAKO,qBALP,C,CAOA;;AACA,MAAMC,YAAY,gBAAGd,KAAK,CAACe,UAAN,CACnB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,EAAkCC,GAAlC,KAA0C;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAmBb,MAAM,EAA/B;AAGA,QAAMc,MAAM,GAAGlB,SAAS,EAAxB;AAEA,sBACE,QAAC,kBAAD;AAAA,2BACE;AACE,MAAA,IAAI,EAAEa,IADR;AAEE,MAAA,OAAO,EAAE,MAAMI,YAAY,EAF7B;AAGE,MAAA,GAAG,EAAED,GAHP;AAIE,MAAA,SAAS,EACPE,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,KAA+BL,YAA/B,GACI,uBADJ,GAEI,WAPR;AAAA,gBAUGA;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvBkB,CAArB;AA0BA,MAAMM,WAAW,gBAAGxB,KAAK,CAACe,UAAN,CAAiB,SAASS,WAAT,CAAqBC,KAArB,EAA4BN,GAA5B,EAAiC;AAAA;;AACpE,QAAM;AAAA,OAACO,YAAD;AAAA,OAAeC;AAAf,MAAkC1B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAcrB,MAAM,EAA1B;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAYrB,mBAAmB,EAArC;;AAEA,QAAMsB,YAAY,GAAG,MAAMH,eAAe,CAAC,CAACD,YAAF,CAA1C;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,KAACH,OAAD,IAAYD,eAAe,CAAC,IAAD,CAA3B;AACD,GAFD;;AAIA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,KAACJ,OAAD,IAAYD,eAAe,CAAC,KAAD,CAA3B;AACD,GAFD;;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,SAAS,GAAG,IAAhB;;AACA,QAAIJ,KAAK,IAAI,GAAb,EAAkB;AAChBF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AACD,WAAO,MAAM;AACXM,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAACJ,KAAD,CARM,CAAT;AAUA,sBACE,QAAC,iBAAD;AACE,IAAA,WAAW,EAAEE,gBADf;AAEE,IAAA,YAAY,EAAEC,gBAFhB;AAAA,4BAIE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAG,QAAA,IAAI,EAAEP,KAAK,CAACT,IAAf;AAAqB,QAAA,GAAG,EAAEG,GAA1B;AAAA,kBACGM,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,iBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEJ,YAFX;AAGE,QAAA,QAAQ,EAAE,CAACF,OAAD,IAAYC,KAAK,GAAG,GAHhC;AAAA,kBAKGH,YAAY,IAAIE,OAAhB,gBAA0B,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAA1B,gBAA6C,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AALhD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAiBGF,YAAY,iBACX,QAAC,kBAAD;AAAoB,MAAA,cAAc,EAAEA,YAApC;AAAA,gBACGD,KADH,aACGA,KADH,uCACGA,KAAK,CAAEU,KADV,iDACG,aAAcC,GAAd,CAAkBC,IAAI,iBACrB,QAAC,IAAD;AACE,QAAA,IAAI,EAAE;AACJC,UAAAA,QAAQ,EAAG,mBADP;AAEJC,UAAAA,KAAK,EAAE;AACLJ,YAAAA,KAAK,EAAG,GAAE1B,gBAAgB,CAAC4B,IAAI,CAACH,KAAN,CAAa;AADlC;AAFH,SADR;AAQE,QAAA,QAAQ,MARV;AAAA,+BAUE,QAAC,YAAD;AAAc,UAAA,YAAY,EAAEG,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEH;AAAlC;AAAA;AAAA;AAAA;AAAA;AAVF,SAOOG,IAAI,CAACG,EAPZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA/DmB,CAApB;AAiEA,eAAehB,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\n\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\n\nimport {\n  DropdownBtnStyles,\n  DropdownItemStyles,\n  DropdownMenuStyles,\n  NavDropdownStyles,\n} from './NavDropdownStyles';\n\n// navbar dropdown item\nconst DropdownItem = React.forwardRef(\n  ({ href, onClick, dropDownItem }, ref) => {\n    const { closeSideNav } = useNav();\n\n    \n    const router = useRouter();\n\n    return (\n      <DropdownItemStyles>\n        <a\n          href={href}\n          onClick={() => closeSideNav()}\n          ref={ref}\n          className={\n            router.asPath.split('/')[1] == dropDownItem\n              ? 'active-link link-item'\n              : 'link-item'\n          }\n        >\n          {dropDownItem}\n        </a>\n      </DropdownItemStyles>\n    );\n  }\n);\n\nconst NavDropdown = React.forwardRef(function NavDropdown(props, ref) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const { navOpen } = useNav();\n  const { width } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const handleMouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const handleMouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n\n  return (\n    <NavDropdownStyles\n      onMouseOver={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className='dropdown-btns-group'>\n        <a href={props.href} ref={ref}>\n          {props.title}\n        </a>\n        <DropdownBtnStyles\n          type='button'\n          onClick={showDropdown}\n          disabled={!navOpen || width > 850}\n        >\n          {dropdownOpen && navOpen ? <MdExpandLess /> : <MdExpandMore />}\n        </DropdownBtnStyles>\n      </div>\n\n      {dropdownOpen && (\n        <DropdownMenuStyles isDropdownOpen={dropdownOpen}>\n          {props?.items?.map(item => (\n            <Link\n              href={{\n                pathname: `/products/[items]`,\n                query: {\n                  items: `${formatUrlToRoute(item.title)}`,\n                },\n              }}\n              key={item.id}\n              passHref\n            >\n              <DropdownItem dropDownItem={item?.title} />\n            </Link>\n          ))}\n        </DropdownMenuStyles>\n      )}\n    </NavDropdownStyles>\n  );\n});\n\nexport default NavDropdown;\n"]},"metadata":{},"sourceType":"module"}