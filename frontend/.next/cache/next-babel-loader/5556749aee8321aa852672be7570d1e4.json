{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Main.js\";\nimport { useQuery } from '@apollo/client';\nimport { Parallax } from 'react-scroll-parallax';\nimport gql from 'graphql-tag';\nimport EmblaCarousel from './Carousel/Carousel';\nconst SLIDE_COUNT = 2;\nexport const MAIN_PAGE_QUERY = gql`\n  query MAIN_PAGE_QUERY {\n    mainPageSlides {\n      bg_image {\n        url\n      }\n      image_1 {\n        url\n      }\n      image_2 {\n        url\n      } \n    }\n  }\n`;\nconst slides = Array.from(Array(SLIDE_COUNT).keys());\nexport default function Main() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(MAIN_PAGE_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this); // BG images for main page carousel\n\n  const media = data === null || data === void 0 ? void 0 : data.mainPageSlides.map(el => el.bg_image.url); // func from Embla Carousel docs\n\n  const mediaByIndex = index => media[index % media.length];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Parallax, {\n      y: [-20, -20],\n      children: /*#__PURE__*/_jsxDEV(EmblaCarousel, {\n        slides: slides,\n        mediaByIndex: mediaByIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n      children: /*#__PURE__*/_jsxDEV(EmblaCarousel, {\n        slides: slides,\n        mediaByIndex: mediaByIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Main.js"],"names":["useQuery","Parallax","gql","EmblaCarousel","SLIDE_COUNT","MAIN_PAGE_QUERY","slides","Array","from","keys","Main","data","loading","error","message","media","mainPageSlides","map","el","bg_image","url","mediaByIndex","index","length"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,MAAMC,WAAW,GAAG,CAApB;AAEA,OAAO,MAAMC,eAAe,GAAGH,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAgBP,MAAMI,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACH,WAAD,CAAL,CAAmBK,IAAnB,EAAX,CAAf;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bb,QAAQ,CAACK,eAAD,CAAzC;AACA,MAAIO,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP,CAHkB,CAM7B;;AACA,QAAMC,KAAK,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,cAAN,CAAqBC,GAArB,CAA0BC,EAAD,IAAOA,EAAE,CAACC,QAAH,CAAYC,GAA5C,CAAd,CAP6B,CAU7B;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAWP,KAAK,CAACO,KAAK,GAAGP,KAAK,CAACQ,MAAf,CAArC;;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,CAAC,EAAE,CAAC,CAAC,EAAF,EAAM,CAAC,EAAP,CAAb;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEjB,MAAvB;AAA+B,QAAA,YAAY,EAAEe;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEf,MAAvB;AAA+B,QAAA,YAAY,EAAEe;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Parallax } from 'react-scroll-parallax';\nimport gql from 'graphql-tag';\n\nimport EmblaCarousel from './Carousel/Carousel';\n\nconst SLIDE_COUNT = 2;\n\nexport const MAIN_PAGE_QUERY = gql`\n  query MAIN_PAGE_QUERY {\n    mainPageSlides {\n      bg_image {\n        url\n      }\n      image_1 {\n        url\n      }\n      image_2 {\n        url\n      } \n    }\n  }\n`;\n\nconst slides = Array.from(Array(SLIDE_COUNT).keys());\n\nexport default function Main() {\n  const { data, loading, error } = useQuery(MAIN_PAGE_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n\n\n  // BG images for main page carousel\n  const media = data?.mainPageSlides.map((el)=> el.bg_image.url);\n\n\n  // func from Embla Carousel docs\n  const mediaByIndex = (index) => media[index % media.length];\n\n  return (\n    <div>\n      <Parallax y={[-20, -20]}>\n        <EmblaCarousel slides={slides} mediaByIndex={mediaByIndex} />\n      </Parallax>\n      <Parallax >\n        <EmblaCarousel slides={slides} mediaByIndex={mediaByIndex} />\n      </Parallax>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}