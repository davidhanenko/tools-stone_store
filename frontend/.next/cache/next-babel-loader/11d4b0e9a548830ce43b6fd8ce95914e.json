{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/NavDropdown.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n// import { useQuery } from '@apollo/client';\n// import gql from 'graphql-tag';\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport styled from 'styled-components';\nimport { useNav } from '../lib/navState';\nvar NavDropdownStyles = styled.div.withConfig({\n  displayName: \"NavDropdown__NavDropdownStyles\",\n  componentId: \"sc-1088b0g-0\"\n})([\"display:flex;align-items:center;align-self:center;a{padding:0.2rem 1rem;text-transform:uppercase;color:grey;position:relative;cursor:pointer;&:hover,&:focus{text-decoration:none;color:var(--black);transition:250ms;background:none;}@media (max-width:700px){padding-left:3rem;width:200px;border-bottom:1px solid var(--lightGrey);padding-bottom:1rem;}}\"]);\n_c = NavDropdownStyles;\nvar DropdownBtnStyles = styled.button.withConfig({\n  displayName: \"NavDropdown__DropdownBtnStyles\",\n  componentId: \"sc-1088b0g-1\"\n})([\"padding:0;font-size:2em;outline:none;border:none;background:transparent;cursor:pointer;position:relative;@media (max-width:700px){position:relative;right:5rem;}svg{padding-bottom:0.3rem;color:grey;}\"]);\n_c2 = DropdownBtnStyles;\nvar DropdownMenuStyles = styled.ul.withConfig({\n  displayName: \"NavDropdown__DropdownMenuStyles\",\n  componentId: \"sc-1088b0g-2\"\n})([\"background:var(--lightGrey);margin:0;li{font-size:1rem;padding-left:2rem;text-decoration:none;list-style:none;}\"]);\n_c3 = DropdownMenuStyles;\n\nfunction DropdownItem() {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = DropdownItem;\nvar NavDropdown = /*#__PURE__*/React.forwardRef(_c5 = _s(function NavDropdown(props, ref) {\n  _s();\n\n  var _useState = useState(false),\n      dropdownOpen = _useState[0],\n      setDropdownOpen = _useState[1];\n\n  var _useNav = useNav(),\n      navOpen = _useNav.navOpen;\n\n  var showDropdown = function showDropdown() {\n    return setDropdownOpen(!dropdownOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavDropdownStyles, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        ref: ref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownBtnStyles, {\n        type: \"button\",\n        onClick: showDropdown,\n        disabled: !navOpen,\n        children: dropdownOpen ? /*#__PURE__*/_jsxDEV(MdExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(MdExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), navOpen && dropdownOpen && /*#__PURE__*/_jsxDEV(DropdownMenuStyles, {\n      children: /*#__PURE__*/_jsxDEV(DropdownItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"FeGxAD5c7VBVItUadFel+Aaa0kI=\", false, function () {\n  return [useNav];\n}));\n_c6 = NavDropdown;\nexport default NavDropdown;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"NavDropdownStyles\");\n$RefreshReg$(_c2, \"DropdownBtnStyles\");\n$RefreshReg$(_c3, \"DropdownMenuStyles\");\n$RefreshReg$(_c4, \"DropdownItem\");\n$RefreshReg$(_c5, \"NavDropdown$React.forwardRef\");\n$RefreshReg$(_c6, \"NavDropdown\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/NavDropdown.js"],"names":["Link","React","useState","MdExpandMore","MdExpandLess","styled","useNav","NavDropdownStyles","div","DropdownBtnStyles","button","DropdownMenuStyles","ul","DropdownItem","NavDropdown","forwardRef","props","ref","dropdownOpen","setDropdownOpen","navOpen","showDropdown","href","title"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,iBAAiB,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,qWAAvB;KAAMD,iB;AA0BN,IAAME,iBAAiB,GAAGJ,MAAM,CAACK,MAAV;AAAA;AAAA;AAAA,8MAAvB;MAAMD,iB;AAkBN,IAAME,kBAAkB,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,uHAAxB;MAAMD,kB;;AAWN,SAASE,YAAT,GAAwB;AACtB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAFQA,Y;AAIT,IAAMC,WAAW,gBAAGb,KAAK,CAACc,UAAN,UAAiB,SAASD,WAAT,CAAqBE,KAArB,EAA4BC,GAA5B,EAAiC;AAAA;;AAAA,kBAC5Bf,QAAQ,CAAC,KAAD,CADoB;AAAA,MAC7DgB,YAD6D;AAAA,MAC/CC,eAD+C;;AAAA,gBAEhDb,MAAM,EAF0C;AAAA,MAE5Dc,OAF4D,WAE5DA,OAF4D;;AAIpE,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMF,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,GAArB;;AAEA,sBACE;AAAA,4BACE,QAAC,iBAAD;AAAA,8BACE;AAAG,QAAA,IAAI,EAAEF,KAAK,CAACM,IAAf;AAAqB,QAAA,GAAG,EAAEL,GAA1B;AAAA,kBACGD,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,iBAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEF,YAFX;AAGE,QAAA,QAAQ,EAAE,CAACD,OAHb;AAAA,kBAKGF,YAAY,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAsB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AALrC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGE,OAAO,IAAIF,YAAX,iBACC,QAAC,kBAAD;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADF;AAqBD,CA3BmB;AAAA,UAEEZ,MAFF;AAAA,GAApB;MAAMQ,W;AA6BN,eAAeA,WAAf","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n// import { useQuery } from '@apollo/client';\n// import gql from 'graphql-tag';\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport styled from 'styled-components';\nimport { useNav } from '../lib/navState';\n\nconst NavDropdownStyles = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  a {\n    padding: 0.2rem 1rem;\n    text-transform: uppercase;\n    color: grey;\n    position: relative;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n      text-decoration: none;\n      color: var(--black);\n      transition: 250ms;\n      background: none;\n    }\n    @media (max-width: 700px) {\n      padding-left: 3rem;\n      width: 200px;\n      border-bottom: 1px solid var(--lightGrey);\n      padding-bottom: 1rem;\n    }\n  }\n`;\n\nconst DropdownBtnStyles = styled.button`\n  padding: 0;\n  font-size: 2em;\n  outline: none;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  position: relative;\n  @media (max-width: 700px) {\n    position: relative;\n    right: 5rem;\n  }\n  svg {\n    padding-bottom: 0.3rem;\n    color: grey;\n  }\n`;\n\nconst DropdownMenuStyles = styled.ul`\n  background: var(--lightGrey);\n  margin: 0;\n  li {\n    font-size: 1rem;\n    padding-left: 2rem;\n    text-decoration: none;\n    list-style: none;\n  }\n`;\n\nfunction DropdownItem() {\n  return <li>1</li>;\n}\n\nconst NavDropdown = React.forwardRef(function NavDropdown(props, ref) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const { navOpen } = useNav();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  return (\n    <>\n      <NavDropdownStyles>\n        <a href={props.href} ref={ref}>\n          {props.title}\n        </a>\n        <DropdownBtnStyles\n          type=\"button\"\n          onClick={showDropdown}\n          disabled={!navOpen}\n        >\n          {dropdownOpen ? <MdExpandLess /> : <MdExpandMore />}\n        </DropdownBtnStyles>\n      </NavDropdownStyles>\n      {navOpen && dropdownOpen && (\n        <DropdownMenuStyles>\n          <DropdownItem />\n        </DropdownMenuStyles>\n      )}\n    </>\n  );\n});\n\nexport default NavDropdown;\n"]},"metadata":{},"sourceType":"module"}