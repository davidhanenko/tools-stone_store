{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Carousel/Carousel.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useEmblaCarousel } from 'embla-carousel/react';\nimport { PrevButton, NextButton } from './CarouselButtons';\nimport { useRecursiveTimeout } from '../../lib/useRecursiveTimeout';\nCarouselStyles; // import { mediaByIndex } from './media';\n\nconst AUTOPLAY_INTERVAL = 2000;\n\nconst EmblaCarousel = ({\n  slides,\n  mediaByIndex\n}) => {\n  const [viewportRef, embla] = useEmblaCarousel({\n    skipSnaps: false\n  });\n  const {\n    0: prevBtnEnabled,\n    1: setPrevBtnEnabled\n  } = useState(false);\n  const {\n    0: nextBtnEnabled,\n    1: setNextBtnEnabled\n  } = useState(false);\n  const autoplay = useCallback(() => {\n    if (!embla) return;\n\n    if (embla.canScrollNext()) {\n      embla.scrollNext();\n    } else {\n      embla.scrollTo(0);\n    }\n  }, [embla]);\n  const {\n    play,\n    stop\n  } = useRecursiveTimeout(autoplay, AUTOPLAY_INTERVAL);\n  const scrollNext = useCallback(() => {\n    if (!embla) return;\n    embla.scrollNext();\n    stop();\n  }, [embla, stop]);\n  const scrollPrev = useCallback(() => {\n    if (!embla) return;\n    embla.scrollPrev();\n    stop();\n  }, [embla, stop]);\n  const onSelect = useCallback(() => {\n    if (!embla) return;\n    setPrevBtnEnabled(embla.canScrollPrev());\n    setNextBtnEnabled(embla.canScrollNext());\n  }, [embla]);\n  useEffect(() => {\n    if (!embla) return;\n    onSelect();\n    embla.on('select', onSelect);\n    embla.on('pointerDown', stop);\n  }, [embla, onSelect, stop]);\n  useEffect(() => {\n    play();\n  }, [play]);\n  return /*#__PURE__*/_jsxDEV(CarouselStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"embla__viewport\",\n      ref: viewportRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embla__container\",\n        children: slides.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"embla__slide\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"embla__slide__inner\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"embla__slide__img\",\n              src: mediaByIndex(index),\n              alt: \"A cool cat.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n      onClick: scrollPrev,\n      enabled: prevBtnEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n      onClick: scrollNext,\n      enabled: nextBtnEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EmblaCarousel;","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Carousel/Carousel.js"],"names":["React","useState","useEffect","useCallback","useEmblaCarousel","PrevButton","NextButton","useRecursiveTimeout","CarouselStyles","AUTOPLAY_INTERVAL","EmblaCarousel","slides","mediaByIndex","viewportRef","embla","skipSnaps","prevBtnEnabled","setPrevBtnEnabled","nextBtnEnabled","setNextBtnEnabled","autoplay","canScrollNext","scrollNext","scrollTo","play","stop","scrollPrev","onSelect","canScrollPrev","on","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACAC,cAAc,C,CACd;;AAEA,MAAMC,iBAAiB,GAAG,IAA1B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA8B;AAClD,QAAM,CAACC,WAAD,EAAcC,KAAd,IAAuBV,gBAAgB,CAAC;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAAD,CAA7C;AACA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsChB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACiB,cAAD;AAAA,OAAiBC;AAAjB,MAAsClB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMmB,QAAQ,GAAGjB,WAAW,CAAC,MAAM;AACjC,QAAI,CAACW,KAAL,EAAY;;AACZ,QAAIA,KAAK,CAACO,aAAN,EAAJ,EAA2B;AACzBP,MAAAA,KAAK,CAACQ,UAAN;AACD,KAFD,MAEO;AACLR,MAAAA,KAAK,CAACS,QAAN,CAAe,CAAf;AACD;AACF,GAP2B,EAOzB,CAACT,KAAD,CAPyB,CAA5B;AASA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBlB,mBAAmB,CAACa,QAAD,EAAWX,iBAAX,CAA1C;AAEA,QAAMa,UAAU,GAAGnB,WAAW,CAAC,MAAM;AACnC,QAAI,CAACW,KAAL,EAAY;AACZA,IAAAA,KAAK,CAACQ,UAAN;AACAG,IAAAA,IAAI;AACL,GAJ6B,EAI3B,CAACX,KAAD,EAAQW,IAAR,CAJ2B,CAA9B;AAMA,QAAMC,UAAU,GAAGvB,WAAW,CAAC,MAAM;AACnC,QAAI,CAACW,KAAL,EAAY;AACZA,IAAAA,KAAK,CAACY,UAAN;AACAD,IAAAA,IAAI;AACL,GAJ6B,EAI3B,CAACX,KAAD,EAAQW,IAAR,CAJ2B,CAA9B;AAMA,QAAME,QAAQ,GAAGxB,WAAW,CAAC,MAAM;AACjC,QAAI,CAACW,KAAL,EAAY;AACZG,IAAAA,iBAAiB,CAACH,KAAK,CAACc,aAAN,EAAD,CAAjB;AACAT,IAAAA,iBAAiB,CAACL,KAAK,CAACO,aAAN,EAAD,CAAjB;AACD,GAJ2B,EAIzB,CAACP,KAAD,CAJyB,CAA5B;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,KAAL,EAAY;AACZa,IAAAA,QAAQ;AACRb,IAAAA,KAAK,CAACe,EAAN,CAAS,QAAT,EAAmBF,QAAnB;AACAb,IAAAA,KAAK,CAACe,EAAN,CAAS,aAAT,EAAwBJ,IAAxB;AACD,GALQ,EAKN,CAACX,KAAD,EAAQa,QAAR,EAAkBF,IAAlB,CALM,CAAT;AAOAvB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,IAAI;AACL,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE,QAAC,cAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEX,WAAtC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGF,MAAM,CAACmB,GAAP,CAAYC,KAAD,iBACV;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,mBADZ;AAEE,cAAA,GAAG,EAAEnB,YAAY,CAACmB,KAAD,CAFnB;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAmCA,KAAnC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEL,UAArB;AAAiC,MAAA,OAAO,EAAEV;AAA1C;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEM,UAArB;AAAiC,MAAA,OAAO,EAAEJ;AAA1C;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlED;;AAoEA,eAAeR,aAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useEmblaCarousel } from 'embla-carousel/react';\nimport { PrevButton, NextButton } from './CarouselButtons';\nimport { useRecursiveTimeout } from '../../lib/useRecursiveTimeout';\nCarouselStyles;\n// import { mediaByIndex } from './media';\n\nconst AUTOPLAY_INTERVAL = 2000;\n\nconst EmblaCarousel = ({ slides, mediaByIndex }) => {\n  const [viewportRef, embla] = useEmblaCarousel({ skipSnaps: false });\n  const [prevBtnEnabled, setPrevBtnEnabled] = useState(false);\n  const [nextBtnEnabled, setNextBtnEnabled] = useState(false);\n\n  const autoplay = useCallback(() => {\n    if (!embla) return;\n    if (embla.canScrollNext()) {\n      embla.scrollNext();\n    } else {\n      embla.scrollTo(0);\n    }\n  }, [embla]);\n\n  const { play, stop } = useRecursiveTimeout(autoplay, AUTOPLAY_INTERVAL);\n\n  const scrollNext = useCallback(() => {\n    if (!embla) return;\n    embla.scrollNext();\n    stop();\n  }, [embla, stop]);\n\n  const scrollPrev = useCallback(() => {\n    if (!embla) return;\n    embla.scrollPrev();\n    stop();\n  }, [embla, stop]);\n\n  const onSelect = useCallback(() => {\n    if (!embla) return;\n    setPrevBtnEnabled(embla.canScrollPrev());\n    setNextBtnEnabled(embla.canScrollNext());\n  }, [embla]);\n\n  useEffect(() => {\n    if (!embla) return;\n    onSelect();\n    embla.on('select', onSelect);\n    embla.on('pointerDown', stop);\n  }, [embla, onSelect, stop]);\n\n  useEffect(() => {\n    play();\n  }, [play]);\n\n  return (\n    <CarouselStyles>\n      <div className=\"embla__viewport\" ref={viewportRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__inner\">\n                <img\n                  className=\"embla__slide__img\"\n                  src={mediaByIndex(index)}\n                  alt=\"A cool cat.\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <PrevButton onClick={scrollPrev} enabled={prevBtnEnabled} />\n      <NextButton onClick={scrollNext} enabled={nextBtnEnabled} />\n    </CarouselStyles>\n  );\n};\n\nexport default EmblaCarousel;\n"]},"metadata":{},"sourceType":"module"}