{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/pages/products/index.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Items from '../../components/items/items-page/items/Items';\nconst PRODUCTS_PAGE_QUERY = gql`\n  query PRODUCTS_PAGE_QUERY($service: String) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        category: items_categories(limit: 4) {\n          id\n          single_item: single_items(limit: 1) {\n            item_title\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ProductsPage({}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(PRODUCTS_PAGE_QUERY, {\n    variables: {\n      service: 'products'\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  const allProducts = data === null || data === void 0 ? void 0 : data.services[0].items;\n  return /*#__PURE__*/_jsxDEV(Items, {\n    allServiceItems: allProducts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/pages/products/index.js"],"names":["gql","useQuery","Items","PRODUCTS_PAGE_QUERY","ProductsPage","data","error","loading","variables","service","message","allProducts","services","items"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,OAAOC,KAAP,MAAkB,+CAAlB;AAGA,MAAMC,mBAAmB,GAAGH,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA,eAAe,SAASI,YAAT,CAAsB,EAAtB,EAA0B;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,QAAQ,CAACE,mBAAD,EAAsB;AAC7DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE;AADA;AADkD,GAAtB,CAAzC;AAMA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMC,WAAW,GAAGN,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,QAAN,CAAe,CAAf,EAAkBC,KAAtC;AAEA,sBAAO,QAAC,KAAD;AAAO,IAAA,eAAe,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\n\nimport Items from '../../components/items/items-page/items/Items';\n\n\nconst PRODUCTS_PAGE_QUERY = gql`\n  query PRODUCTS_PAGE_QUERY($service: String) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        category: items_categories(limit: 4) {\n          id\n          single_item: single_items(limit: 1) {\n            item_title\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProductsPage({}) {\n  const { data, error, loading } = useQuery(PRODUCTS_PAGE_QUERY, {\n    variables: {\n      service: 'products',\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const allProducts = data?.services[0].items;\n\n  return <Items allServiceItems={allProducts} />;\n}\n"]},"metadata":{},"sourceType":"module"}