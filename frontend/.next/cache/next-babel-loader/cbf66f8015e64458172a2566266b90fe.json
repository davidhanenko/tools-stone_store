{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Test.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query TEST {\\n    tests {\\n      id\\n      message\\n      image {\\n        id\\n        url\\n      }\\n      photo {\\n        id\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport T from './T';\nexport var TEST = gql(_templateObject());\nexport default function Test() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(TEST),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data === null || data === void 0 ? void 0 : data.tests.map(function (t) {\n      return /*#__PURE__*/_jsxDEV(T, {\n        test: t\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Test.js"],"names":["useQuery","gql","T","TEST","Test","data","error","loading","message","tests","map","t","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,CAAP,MAAc,KAAd;AAEA,OAAO,IAAMC,IAAI,GAAGF,GAAH,mBAAV;AAiBP,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBACIJ,QAAQ,CAACG,IAAD,CADZ;AAAA,MACrBE,IADqB,aACrBA,IADqB;AAAA,MACfC,KADe,aACfA,KADe;AAAA,MACRC,OADQ,aACRA,OADQ;;AAG7B,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,cACGH,IADH,aACGA,IADH,uBACGA,IAAI,CAAEI,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,CAAC;AAAA,0BAChB,QAAC,CAAD;AAAc,QAAA,IAAI,EAAEA;AAApB,SAAQA,CAAC,CAACC,EAAV;AAAA;AAAA;AAAA;AAAA,eADgB;AAAA,KAAjB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZuBR,I;UACWJ,Q;;;KADXI,I","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport T from './T';\n\nexport const TEST = gql`\n  query TEST {\n    tests {\n      id\n      message\n      image {\n        id\n        url\n      }\n      photo {\n        id\n        url\n      }\n    }\n  }\n`;\n\nexport default function Test() {\n  const { data, error, loading } = useQuery(TEST);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      {data?.tests.map(t => (\n        <T key={t.id} test={t} />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}