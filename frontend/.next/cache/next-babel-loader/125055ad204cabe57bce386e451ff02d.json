{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/items/items-page/ItemsCategory.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useState } from 'react';\nimport ItemsSubCategoty from './ItemsSubCategory';\nimport { ItemsCategoryStyles } from './ItemsCategoryStyles';\nconst ITEMS_CATEGORY = gql`\n  query ITEMS_CATEGORY($itemsCategory: String!) {\n    products(where: { product_title: $itemsCategory }) {\n      product_title\n      category: product_categories {\n        category_title: product_category\n        id\n        single_item: single_products(limit: 1) {\n          item_title\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ItemsCategory({\n  itemsCategory\n}) {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ITEMS_CATEGORY, {\n    variables: {\n      itemsCategory\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  const product = data === null || data === void 0 ? void 0 : data.products[0];\n  setTitle(product.product_title);\n  console.log(title);\n  return /*#__PURE__*/_jsxDEV(ItemsCategoryStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category-title\",\n      children: itemsCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: product.category.map(subCategory => /*#__PURE__*/_jsxDEV(ItemsSubCategoty, {\n        subCategory: subCategory,\n        title: title\n      }, subCategory.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/items/items-page/ItemsCategory.js"],"names":["gql","useQuery","useState","ItemsSubCategoty","ItemsCategoryStyles","ITEMS_CATEGORY","ItemsCategory","itemsCategory","title","setTitle","data","error","loading","variables","message","product","products","product_title","console","log","category","map","subCategory","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,MAAMC,cAAc,GAAGL,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASM,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA0C;AAEvD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BX,QAAQ,CAACI,cAAD,EAAiB;AACxDQ,IAAAA,SAAS,EAAE;AACTN,MAAAA;AADS;AAD6C,GAAjB,CAAzC;AAMA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMC,OAAO,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEM,QAAN,CAAe,CAAf,CAAhB;AACAP,EAAAA,QAAQ,CAACM,OAAO,CAACE,aAAT,CAAR;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBAAgCD;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGQ,OAAO,CAACK,QAAR,CAAiBC,GAAjB,CAAqBC,WAAW,iBAC/B,QAAC,gBAAD;AAEE,QAAA,WAAW,EAAEA,WAFf;AAGE,QAAA,KAAK,EAAEd;AAHT,SACOc,WAAW,CAACC,EADnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useState } from 'react';\n\nimport ItemsSubCategoty from './ItemsSubCategory';\nimport { ItemsCategoryStyles } from './ItemsCategoryStyles';\n\nconst ITEMS_CATEGORY = gql`\n  query ITEMS_CATEGORY($itemsCategory: String!) {\n    products(where: { product_title: $itemsCategory }) {\n      product_title\n      category: product_categories {\n        category_title: product_category\n        id\n        single_item: single_products(limit: 1) {\n          item_title\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ItemsCategory({ itemsCategory }) {\n\n  const [title, setTitle] = useState('');\n\n  const { data, error, loading } = useQuery(ITEMS_CATEGORY, {\n    variables: {\n      itemsCategory,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const product = data?.products[0];\n  setTitle(product.product_title);\n\n  console.log(title);\n\n  return (\n    <ItemsCategoryStyles>\n      <h3 className='category-title'>{itemsCategory}</h3>\n      <div className='category'>\n        {product.category.map(subCategory => (\n          <ItemsSubCategoty\n            key={subCategory.id}\n            subCategory={subCategory}\n            title={title}\n          />\n        ))}\n      </div>\n    </ItemsCategoryStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}