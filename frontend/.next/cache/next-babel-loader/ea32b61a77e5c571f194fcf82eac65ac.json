{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/[collection]/[single].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ITEMS_COLLECTION($item: String!) {\\n    items_category: itemsCategories(where: { category_title: $item }) {\\n      category: category_title\\n      id\\n      single_items {\\n        id\\n        item_title\\n        price\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport SubCategoryCollection from '../../../../components/items/items-page/SubCategoryCollection';\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\nvar ITEMS_COLLECTION = gql(_templateObject());\nexport default function ProductsPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(ITEMS_COLLECTION, {\n    variables: {\n      item: formatUrlToDbName(query.collection)\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SubCategoryCollection, {\n      itemsCollection: data === null || data === void 0 ? void 0 : data.items_category[0],\n      product: query.products,\n      collection: query.collection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProductsPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/[collection]/[single].js"],"names":["gql","useQuery","SubCategoryCollection","formatUrlToDbName","ITEMS_COLLECTION","ProductsPage","query","variables","item","collection","data","error","loading","message","items_category","products"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,qBAAP,MAAkC,+DAAlC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,IAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;AAkBA,eAAe,SAASK,YAAT,OAAiC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACbL,QAAQ,CAACG,gBAAD,EAAmB;AAC1DG,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEL,iBAAiB,CAACG,KAAK,CAACG,UAAP;AADd;AAD+C,GAAnB,CADK;AAAA,MACtCC,IADsC,aACtCA,IADsC;AAAA,MAChCC,KADgC,aAChCA,KADgC;AAAA,MACzBC,OADyB,aACzBA,OADyB;;AAO9C,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,2BACE,QAAC,qBAAD;AACE,MAAA,eAAe,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,cAAN,CAAqB,CAArB,CADnB;AAEE,MAAA,OAAO,EAAER,KAAK,CAACS,QAFjB;AAGE,MAAA,UAAU,EAAET,KAAK,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GAnBuBJ,Y;UACWJ,Q;;;KADXI,Y","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport SubCategoryCollection from '../../../../components/items/items-page/SubCategoryCollection';\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\n\nconst ITEMS_COLLECTION = gql`\n  query ITEMS_COLLECTION($item: String!) {\n    items_category: itemsCategories(where: { category_title: $item }) {\n      category: category_title\n      id\n      single_items {\n        id\n        item_title\n        price\n        description\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProductsPage({ query }) {\n  const { data, error, loading } = useQuery(ITEMS_COLLECTION, {\n    variables: {\n      item: formatUrlToDbName(query.collection),\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <>\n      <SubCategoryCollection\n        itemsCollection={data?.items_category[0]}\n        product={query.products}\n        collection={query.collection}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}