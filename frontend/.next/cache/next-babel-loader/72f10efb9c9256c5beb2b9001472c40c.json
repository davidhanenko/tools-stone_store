{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n// import { useQuery } from '@apollo/client';\n// import gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport { DropdownBtnStyles, DropdownItemStyles, DropdownMenuStyles, NavDropdownStyles } from './NavDropdownStyles';\nimport { useNav } from '../../lib/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { useEffect } from 'react';\n\nfunction DropdownItem(_ref) {\n  var item = _ref.item;\n  return /*#__PURE__*/_jsxDEV(DropdownItemStyles, {\n    children: [\"Link\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item,\n      children: [item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DropdownItem;\nvar NavDropdown = /*#__PURE__*/React.forwardRef(_c2 = _s(function NavDropdown(props, ref) {\n  var _props$products,\n      _this = this;\n\n  _s();\n\n  var _useState = useState(false),\n      dropdownOpen = _useState[0],\n      setDropdownOpen = _useState[1];\n\n  var _useNav = useNav(),\n      navOpen = _useNav.navOpen;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var showDropdown = function showDropdown() {\n    return setDropdownOpen(!dropdownOpen);\n  };\n\n  var mouseEnter = function mouseEnter() {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  var mouseLeave = function mouseLeave() {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(function () {\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(NavDropdownStyles, {\n    onMouseOver: mouseEnter,\n    onMouseLeave: mouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btns-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        ref: ref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownBtnStyles, {\n        type: \"button\",\n        onClick: showDropdown,\n        disabled: !navOpen || width > 850,\n        children: dropdownOpen && navOpen ? /*#__PURE__*/_jsxDEV(MdExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(MdExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(DropdownMenuStyles, {\n      children: props === null || props === void 0 ? void 0 : (_props$products = props.products) === null || _props$products === void 0 ? void 0 : _props$products.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(DropdownItem, {\n          item: product.product_title.toLowerCase()\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}, \"plV0bTHcTVR4u9m8lBiRT8ewwow=\", false, function () {\n  return [useNav, useWindowDimensions];\n}));\n_c3 = NavDropdown;\nexport default NavDropdown;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DropdownItem\");\n$RefreshReg$(_c2, \"NavDropdown$React.forwardRef\");\n$RefreshReg$(_c3, \"NavDropdown\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js"],"names":["React","useState","Link","MdExpandMore","MdExpandLess","DropdownBtnStyles","DropdownItemStyles","DropdownMenuStyles","NavDropdownStyles","useNav","useWindowDimensions","useEffect","DropdownItem","item","NavDropdown","forwardRef","props","ref","dropdownOpen","setDropdownOpen","navOpen","width","showDropdown","mouseEnter","mouseLeave","href","title","products","map","product","product_title","toLowerCase","id"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n// import { useQuery } from '@apollo/client';\n// import gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport {\n  DropdownBtnStyles,\n  DropdownItemStyles,\n  DropdownMenuStyles,\n  NavDropdownStyles,\n} from './NavDropdownStyles';\nimport { useNav } from '../../lib/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { useEffect } from 'react';\n\nfunction DropdownItem({ item }) {\n  return (\n    <DropdownItemStyles>\n      Link\n      <a href={item}>{item} </a>\n    </DropdownItemStyles>\n  );\n}\n\nconst NavDropdown = React.forwardRef(function NavDropdown(props, ref) {\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const { navOpen } = useNav();\n  const { width } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n  }, [width]);\n\n  return (\n    <NavDropdownStyles onMouseOver={mouseEnter} onMouseLeave={mouseLeave}>\n      <div className='dropdown-btns-group'>\n        <a href={props.href} ref={ref}>\n          {props.title}\n        </a>\n        <DropdownBtnStyles\n          type='button'\n          onClick={showDropdown}\n          disabled={!navOpen || width > 850}\n        >\n          {dropdownOpen && navOpen ? <MdExpandLess /> : <MdExpandMore />}\n        </DropdownBtnStyles>\n      </div>\n\n      {dropdownOpen && (\n        <DropdownMenuStyles>\n          {props?.products?.map((product)=> (\n            <DropdownItem key={product.id} item={product.product_title.toLowerCase()}/>\n          ))}\n        </DropdownMenuStyles>\n      )}\n    </NavDropdownStyles>\n  );\n});\n\nexport default NavDropdown;\n"]},"metadata":{},"sourceType":"module"}