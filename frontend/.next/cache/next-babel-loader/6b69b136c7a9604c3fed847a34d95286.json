{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/menu/MenuLink.js\",\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useMenu } from '../../context/menuState';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nimport MenuDropdown from './MenuDropdown';\nimport { MenuDropdownBtnStyles } from './MenuDropdownStyles';\nimport { MenuLinkStyles } from './MenuLinkStyles';\nexport default function MenuLink(_ref) {\n  _s();\n\n  var product = _ref.product;\n  var router = useRouter();\n\n  var _useMenu = useMenu(),\n      closeMenu = _useMenu.closeMenu;\n\n  return /*#__PURE__*/_jsxDEV(MenuLinkStyles, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: {\n        pathname: '/products/[products]',\n        query: {\n          products: \"\".concat(formatUrlToRoute(product.title))\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: function onClick() {\n          return closeMenu();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: formatUrlToRoute(router.asPath.split('/').slice(-1).join('')) === formatUrlToRoute(product.title) ? 'active link-title' : 'link-title',\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MenuLink, \"3KF1ZgLXJVD9qCWi3znZWYpGxZU=\", false, function () {\n  return [useRouter, useMenu];\n});\n\n_c = MenuLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLink\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/menu/MenuLink.js"],"names":["Link","useRouter","useMenu","formatUrlToRoute","MenuDropdown","MenuDropdownBtnStyles","MenuLinkStyles","MenuLink","product","router","closeMenu","pathname","query","products","title","asPath","split","slice","join"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,eAAe,SAASC,QAAT,OAA+B;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC5C,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AAD4C,iBAGtBC,OAAO,EAHe;AAAA,MAGpCQ,SAHoC,YAGpCA,SAHoC;;AAK5C,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,sBADN;AAEJC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,YAAKV,gBAAgB,CAACK,OAAO,CAACM,KAAT,CAArB;AAAV;AAFH,OADR;AAAA,6BAME;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAMJ,SAAS,EAAf;AAAA,SAAZ;AAAA,+BACE;AACE,UAAA,SAAS,EACPP,gBAAgB,CAACM,MAAM,CAACM,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyBC,KAAzB,CAA+B,CAAC,CAAhC,EAAmCC,IAAnC,CAAwC,EAAxC,CAAD,CAAhB,KACAf,gBAAgB,CAACK,OAAO,CAACM,KAAT,CADhB,GAEI,mBAFJ,GAGI,YALR;AAAA,oBAQGN,OAAO,CAACM;AARX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7BuBP,Q;UACPN,S,EAEOC,O;;;KAHAK,Q","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nimport { useMenu } from '../../context/menuState';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nimport MenuDropdown from './MenuDropdown';\nimport { MenuDropdownBtnStyles } from './MenuDropdownStyles';\n\nimport { MenuLinkStyles } from './MenuLinkStyles';\n\nexport default function MenuLink({ product }) {\n  const router = useRouter();\n\n  const { closeMenu } = useMenu();\n\n  return (\n    <MenuLinkStyles>\n      <Link\n        href={{\n          pathname: '/products/[products]',\n          query: { products: `${formatUrlToRoute(product.title)}` },\n        }}\n      >\n        <a onClick={() => closeMenu()}>\n          <p\n            className={\n              formatUrlToRoute(router.asPath.split('/').slice(-1).join('')) ===\n              formatUrlToRoute(product.title)\n                ? 'active link-title'\n                : 'link-title'\n            }\n          >\n            {product.title}\n          </p>\n      \n        </a>\n      </Link>\n    </MenuLinkStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}