{"ast":null,"code":"import _slicedToArray from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { PrevButton, NextButton } from '../SliderButtons';\nimport { useEmblaCarousel } from 'embla-carousel/react';\nimport ItemsSliderStyles from './ItemsSliderStyles';\nimport useWindowDimensions from '../../../../lib/windowDimensions';\nimport ItemsSlide from './ItemsSlide';\n\nvar ItemsSlider = function ItemsSlider(_ref) {\n  var slides = _ref.slides,\n      itemsByIndex = _ref.itemsByIndex;\n\n  var _useEmblaCarousel = useEmblaCarousel({\n    slidesToScroll: 1,\n    containScroll: 'keepSnap',\n    skipSnaps: false,\n    align: 0,\n    loop: true\n  }),\n      _useEmblaCarousel2 = _slicedToArray(_useEmblaCarousel, 2),\n      viewportRef = _useEmblaCarousel2[0],\n      embla = _useEmblaCarousel2[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var _useState = useState(false),\n      prevBtnEnabled = _useState[0],\n      setPrevBtnEnabled = _useState[1];\n\n  var _useState2 = useState(false),\n      nextBtnEnabled = _useState2[0],\n      setNextBtnEnabled = _useState2[1]; // const [emblaRef, emblaApi] = useEmblaCarousel();\n\n\n  var scrollPrev = useCallback(function () {\n    return embla && embla.scrollPrev();\n  }, [embla]);\n  var scrollNext = useCallback(function () {\n    return embla && embla.scrollNext();\n  }, [embla]);\n  var onSelect = useCallback(function () {\n    if (!embla) return;\n    setPrevBtnEnabled(embla.canScrollPrev());\n    setNextBtnEnabled(embla.canScrollNext());\n  }, [embla]);\n  useEffect(function () {\n    if (!embla) return;\n    embla.on('select', onSelect);\n    onSelect();\n  }, [embla, onSelect]);\n  useEffect(function () {\n    if (width <= 850) {\n      setPrevBtnEnabled(true);\n      setNextBtnEnabled(true);\n    }\n  }, [width]); // useEffect(() => {\n  //   if (emblaApi && emblaApi.slideNodes().length !== slides.length) {\n  //     emblaApi.reInit();\n  //   }\n  // }, [emblaApi, slides]);\n\n  return /*#__PURE__*/_jsxs(ItemsSliderStyles, {\n    className: \"embla\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"embla__viewport\",\n      ref: viewportRef,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"embla__container\",\n        children: slides.map(function (index) {\n          return /*#__PURE__*/_jsx(\"div\", {\n            className: \"embla__slide\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"embla__slide__inner\",\n              children: /*#__PURE__*/_jsx(ItemsSlide, {\n                itemsByIndex: itemsByIndex,\n                index: index\n              })\n            })\n          }, index);\n        })\n      })\n    }), /*#__PURE__*/_jsx(PrevButton, {\n      onClick: scrollPrev,\n      enabled: prevBtnEnabled\n    }), /*#__PURE__*/_jsx(NextButton, {\n      onClick: scrollNext,\n      enabled: nextBtnEnabled\n    })]\n  });\n};\n\nexport default ItemsSlider;","map":null,"metadata":{},"sourceType":"module"}