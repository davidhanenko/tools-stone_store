{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS($service: String!, $itemsCategory: String!) {\\n    services(where: { service: $service }) {\\n      service\\n      items(where: { title: $itemsCategory }) {\\n        title\\n        category: items_categories {\\n          category_title\\n          id\\n          single_item: single_items(limit: 1) {\\n            item_title\\n            image {\\n              url\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsByCategory from '../../../components/items/items-page/items-by-category/ItemsByCategory';\nimport { formatUrlToDbName } from '../../../helpers/formatUrl';\nvar ALL_PRODUCTS = gql(_templateObject());\nexport default function ProductsCategoryPage(_ref) {\n  var query = _ref.query;\n\n  var _useQuery = useQuery(ALL_PRODUCTS, {\n    variables: {\n      service: 'products',\n      itemsCategory: formatUrlToDbName(query.products)\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var items = data.services[0].items[0];\n  return /*#__PURE__*/_jsx(ItemsByCategory, {\n    items: items\n  });\n}","map":null,"metadata":{},"sourceType":"module"}