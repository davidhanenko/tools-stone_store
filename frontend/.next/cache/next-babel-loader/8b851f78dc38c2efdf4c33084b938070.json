{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/items/main-page/ItemsMainPage.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsStyles';\nconst PRODUCTS = gql`\n  query PRODUCTS {\n    products {\n      id\n      title: product_title\n      category: items_categories(limit: 1) {\n        single_item: single_items {\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ItemsMainPage({}) {\n  var _data$products;\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(PRODUCTS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  const SLIDE_COUNT = data === null || data === void 0 ? void 0 : (_data$products = data.products) === null || _data$products === void 0 ? void 0 : _data$products.length;\n  const slides = Array.from(Array(SLIDE_COUNT).keys()); // func from Embla Carousel docs\n\n  const itemsByIndex = index => {\n    var _data$products2;\n\n    return data === null || data === void 0 ? void 0 : data.products[index % (data === null || data === void 0 ? void 0 : (_data$products2 = data.products) === null || _data$products2 === void 0 ? void 0 : _data$products2.length)];\n  };\n\n  return /*#__PURE__*/_jsxDEV(ItemsMainPageStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(ItemsSlider, {\n      slides: slides,\n      itemsByIndex: itemsByIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/items/main-page/ItemsMainPage.js"],"names":["gql","useQuery","ItemsSlider","ItemsMainPageStyles","PRODUCTS","ItemsMainPage","data","error","loading","message","SLIDE_COUNT","products","length","slides","Array","from","keys","itemsByIndex","index"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,MAAMC,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,eAAe,SAASK,aAAT,CAAuB,EAAvB,EAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACG,QAAD,CAAzC;AAEA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMC,WAAW,GAAGJ,IAAH,aAAGA,IAAH,yCAAGA,IAAI,CAAEK,QAAT,mDAAG,eAAgBC,MAApC;AAEA,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACJ,WAAD,CAAL,CAAmBM,IAAnB,EAAX,CAAf,CARwC,CAUxC;;AACA,QAAMC,YAAY,GAAGC,KAAK;AAAA;;AAAA,WAAIZ,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEK,QAAN,CAAeO,KAAK,IAAGZ,IAAH,aAAGA,IAAH,0CAAGA,IAAI,CAAEK,QAAT,oDAAG,gBAAgBC,MAAnB,CAApB,CAAJ;AAAA,GAA1B;;AAEA,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,IAAI,iBAAI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEO,MAArB;AAA6B,MAAA,YAAY,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsStyles';\n\nconst PRODUCTS = gql`\n  query PRODUCTS {\n    products {\n      id\n      title: product_title\n      category: items_categories(limit: 1) {\n        single_item: single_items {\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ItemsMainPage({}) {\n  const { data, error, loading } = useQuery(PRODUCTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const SLIDE_COUNT = data?.products?.length;\n\n  const slides = Array.from(Array(SLIDE_COUNT).keys());\n\n  // func from Embla Carousel docs\n  const itemsByIndex = index => data?.products[index % data?.products?.length];\n\n  return (\n    <ItemsMainPageStyles>\n      <h2>Products</h2>\n      {data && <ItemsSlider slides={slides} itemsByIndex={itemsByIndex} />}\n    </ItemsMainPageStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}