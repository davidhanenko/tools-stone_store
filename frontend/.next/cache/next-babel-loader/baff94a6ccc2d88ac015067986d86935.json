{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Main.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport EmblaCarousel from './Carousel/Carousel';\nconst SLIDE_COUNT = 2;\nconst MAIN_PAGE = gql`\n  query MAIN_PAGE {\n    mPage {\n      image_1 {\n        id\n        url\n      }\n      image_2 {\n        id\n        url\n      }\n    }\n  }\n`;\nconst slides = Array.from(Array(SLIDE_COUNT).keys());\nexport default function Main() {\n  var _data$mPage;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(MAIN_PAGE);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this); // BG images for main page carousel\n\n  const media = [(_data$mPage = data.mPage) === null || _data$mPage === void 0 ? void 0 : _data$mPage.image_1[0].url, data.mPage.image_2[0].url]; // func from Embla Carousel docs\n\n  const mediaByIndex = index => media[index % media.length];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EmblaCarousel, {\n      slides: slides,\n      mediaByIndex: mediaByIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Main.js"],"names":["useQuery","gql","EmblaCarousel","SLIDE_COUNT","MAIN_PAGE","slides","Array","from","keys","Main","data","loading","error","message","media","mPage","image_1","url","image_2","mediaByIndex","index","length"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,MAAMC,WAAW,GAAG,CAApB;AAEA,MAAMC,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMI,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACH,WAAD,CAAL,CAAmBK,IAAnB,EAAX,CAAf;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BZ,QAAQ,CAACI,SAAD,CAAzC;AACA,MAAIO,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP,CAHkB,CAI7B;;AACA,QAAMC,KAAK,GAAG,gBAACJ,IAAI,CAACK,KAAN,gDAAC,YAAYC,OAAZ,CAAoB,CAApB,EAAuBC,GAAxB,EAA6BP,IAAI,CAACK,KAAL,CAAWG,OAAX,CAAmB,CAAnB,EAAsBD,GAAnD,CAAd,CAL6B,CAM7B;;AACA,QAAME,YAAY,GAAIC,KAAD,IAAWN,KAAK,CAACM,KAAK,GAAGN,KAAK,CAACO,MAAf,CAArC;;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEhB,MAAvB;AAA+B,MAAA,YAAY,EAAEc;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport EmblaCarousel from './Carousel/Carousel';\n\nconst SLIDE_COUNT = 2;\n\nconst MAIN_PAGE = gql`\n  query MAIN_PAGE {\n    mPage {\n      image_1 {\n        id\n        url\n      }\n      image_2 {\n        id\n        url\n      }\n    }\n  }\n`;\n\nconst slides = Array.from(Array(SLIDE_COUNT).keys());\n\nexport default function Main() {\n  const { data, loading, error } = useQuery(MAIN_PAGE);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n  // BG images for main page carousel\n  const media = [data.mPage?.image_1[0].url, data.mPage.image_2[0].url];\n  // func from Embla Carousel docs\n  const mediaByIndex = (index) => media[index % media.length];\n\n  return (\n    <div>\n      <EmblaCarousel slides={slides} mediaByIndex={mediaByIndex} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}