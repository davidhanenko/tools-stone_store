{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n// import { useQuery } from '@apollo/client';\n// import gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport { DropdownBtnStyles, DropdownItemStyles, DropdownMenuStyles, NavDropdownStyles } from './NavDropdownStyles';\nimport { useNav } from '../../lib/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { useEffect } from 'react';\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  href,\n  onClick,\n  item\n}, ref) => {\n  const {\n    closeSideNav\n  } = useNav();\n  return /*#__PURE__*/_jsxDEV(DropdownItemStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      onClick: () => closeSideNav(),\n      ref: ref,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n});\nconst NavDropdown = /*#__PURE__*/React.forwardRef(function NavDropdown(props, ref) {\n  var _props$products;\n\n  const {\n    0: dropdownOpen,\n    1: setDropdownOpen\n  } = useState(false);\n  const {\n    navOpen\n  } = useNav();\n  const {\n    width\n  } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(NavDropdownStyles, {\n    onMouseOver: mouseEnter,\n    onMouseLeave: mouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btns-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        ref: ref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownBtnStyles, {\n        type: \"button\",\n        onClick: showDropdown,\n        disabled: !navOpen || width > 850,\n        children: dropdownOpen && navOpen ? /*#__PURE__*/_jsxDEV(MdExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(MdExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(DropdownMenuStyles, {\n      children: props === null || props === void 0 ? void 0 : (_props$products = props.products) === null || _props$products === void 0 ? void 0 : _props$products.map(product => /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/products/[product]',\n          query: {\n            product: `${product.product_title.toLowerCase().split(' ').join('_')}`\n          }\n        },\n        passHref: true,\n        children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n          item: product === null || product === void 0 ? void 0 : product.product_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n});\nexport default NavDropdown;","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/navbar/NavDropdown.js"],"names":["React","useState","Link","MdExpandMore","MdExpandLess","DropdownBtnStyles","DropdownItemStyles","DropdownMenuStyles","NavDropdownStyles","useNav","useWindowDimensions","useEffect","DropdownItem","forwardRef","href","onClick","item","ref","closeSideNav","NavDropdown","props","dropdownOpen","setDropdownOpen","navOpen","width","showDropdown","mouseEnter","mouseLeave","title","products","map","product","pathname","query","product_title","toLowerCase","split","join","id"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n// import { useQuery } from '@apollo/client';\n// import gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport {\n  DropdownBtnStyles,\n  DropdownItemStyles,\n  DropdownMenuStyles,\n  NavDropdownStyles,\n} from './NavDropdownStyles';\nimport { useNav } from '../../lib/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { useEffect } from 'react';\n\nconst DropdownItem = React.forwardRef(({ href, onClick, item }, ref) => {\n  const { closeSideNav } = useNav();\n  return (\n    <DropdownItemStyles>\n      <a href={href} onClick={() => closeSideNav()} ref={ref}>\n        {item}\n      </a>\n    </DropdownItemStyles>\n  );\n});\n\nconst NavDropdown = React.forwardRef(function NavDropdown(props, ref) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const { navOpen } = useNav();\n  const { width } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !navOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !navOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n  }, [width]);\n\n  return (\n    <NavDropdownStyles onMouseOver={mouseEnter} onMouseLeave={mouseLeave}>\n      <div className='dropdown-btns-group'>\n        <a href={props.href} ref={ref}>\n          {props.title}\n        </a>\n        <DropdownBtnStyles\n          type='button'\n          onClick={showDropdown}\n          disabled={!navOpen || width > 850}\n        >\n          {dropdownOpen && navOpen ? <MdExpandLess /> : <MdExpandMore />}\n        </DropdownBtnStyles>\n      </div>\n\n      {dropdownOpen && (\n        <DropdownMenuStyles>\n          {props?.products?.map(product => (\n            <Link\n              href={{\n                pathname: '/products/[product]',\n                query: {\n                  product: `${product.product_title\n                    .toLowerCase()\n                    .split(' ')\n                    .join('_')}`,\n                },\n              }}\n              key={product.id}\n              passHref\n            >\n              {/* <DropdownItemStyles>\n              <a>{product.product_title.toLowerCase()}</a>\n              </DropdownItemStyles> */}\n              <DropdownItem item={product?.product_title} />\n            </Link>\n          ))}\n        </DropdownMenuStyles>\n      )}\n    </NavDropdownStyles>\n  );\n});\n\nexport default NavDropdown;\n"]},"metadata":{},"sourceType":"module"}