{"ast":null,"code":"import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport gql from 'graphql-tag';\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache(),\n  connectToDevTools: true\n});\nconst d = {};\nclient.query({\n  query: gql`\n      {\n        mPage {\n          image_1 {\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `\n}).then(response => d.mPage = response.data).catch(err => console.error(err));\nconsole.log(d === null || d === void 0 ? void 0 : d.mPage);\nexport const media = []; // console.log(media);\n\nexport const mediaByIndex = index => media[index % media.length];","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Carousel/media/index.js"],"names":["useQuery","InMemoryCache","ApolloClient","gql","client","uri","cache","connectToDevTools","d","query","then","response","mPage","data","catch","err","console","error","log","media","mediaByIndex","index","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIL,aAAJ,EAFuB;AAG9BM,EAAAA,iBAAiB,EAAE;AAHW,CAAjB,CAAf;AAKA,MAAMC,CAAC,GAAG,EAAV;AACAJ,MAAM,CACHK,KADH,CACS;AACLA,EAAAA,KAAK,EAAEN,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbS,CADT,EAgBGO,IAhBH,CAgBSC,QAAD,IAAeH,CAAC,CAACI,KAAF,GAAUD,QAAQ,CAACE,IAhB1C,EAiBGC,KAjBH,CAiBUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAjBlB;AAmBAC,OAAO,CAACE,GAAR,CAAYV,CAAZ,aAAYA,CAAZ,uBAAYA,CAAC,CAAEI,KAAf;AAEA,OAAO,MAAMO,KAAK,GAAG,EAAd,C,CACP;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAWF,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACG,MAAf,CAArC","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport gql from 'graphql-tag';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n});\nconst d = {};\nclient\n  .query({\n    query: gql`\n      {\n        mPage {\n          image_1 {\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `,\n  })\n  .then((response) => (d.mPage = response.data))\n  .catch((err) => console.error(err));\n\nconsole.log(d?.mPage);\n\nexport const media = [];\n// console.log(media);\nexport const mediaByIndex = (index) => media[index % media.length];\n"]},"metadata":{},"sourceType":"module"}