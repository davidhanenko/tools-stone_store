{"ast":null,"code":"import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport gql from 'graphql-tag';\nimport { createClient } from '../../../lib/withData';\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache(),\n  connectToDevTools: true\n});\nconst media = [];\ncreateClient.query({\n  query: gql`\n      {\n        mPage {\n          image_1 {\n            id\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `\n}).then(response => media.push(response.data.mPage.image_1[0].url, response.data.mPage.image_2[0].url)).catch(err => console.error(err));\nexport { media };\nexport const mediaByIndex = index => media[index % media.length];","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Carousel/media/index.js"],"names":["useQuery","InMemoryCache","ApolloClient","gql","createClient","client","uri","cache","connectToDevTools","media","query","then","response","push","data","mPage","image_1","url","image_2","catch","err","console","error","mediaByIndex","index","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ,EAFuB;AAG9BO,EAAAA,iBAAiB,EAAE;AAHW,CAAjB,CAAf;AAMA,MAAMC,KAAK,GAAG,EAAd;AAEAL,YAAY,CACTM,KADH,CACS;AACLA,EAAAA,KAAK,EAAEP,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdS,CADT,EAiBGQ,IAjBH,CAiBQC,QAAQ,IACZH,KAAK,CAACI,IAAN,CACED,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,OAApB,CAA4B,CAA5B,EAA+BC,GADjC,EAEEL,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBG,OAApB,CAA4B,CAA5B,EAA+BD,GAFjC,CAlBJ,EAuBGE,KAvBH,CAuBSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAvBhB;AAyBA,SAASX,KAAT;AACA,OAAO,MAAMc,YAAY,GAAIC,KAAD,IAAWf,KAAK,CAACe,KAAK,GAAGf,KAAK,CAACgB,MAAf,CAArC","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport gql from 'graphql-tag';\nimport { createClient } from '../../../lib/withData';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n});\n\nconst media = [];\n\ncreateClient\n  .query({\n    query: gql`\n      {\n        mPage {\n          image_1 {\n            id\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `,\n  })\n  .then(response =>\n    media.push(\n      response.data.mPage.image_1[0].url,\n      response.data.mPage.image_2[0].url\n    )\n  )\n  .catch(err => console.error(err));\n\nexport { media };\nexport const mediaByIndex = (index) => media[index % media.length];\n"]},"metadata":{},"sourceType":"module"}