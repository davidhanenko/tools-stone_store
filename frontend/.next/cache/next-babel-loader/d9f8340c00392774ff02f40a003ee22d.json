{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/products/products-page/category.products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PRODUCTS_CATEGORY($productsCategory: String!) {\\n    products(where: { product_title: $productsCategory }) {\\n      product_title\\n      category: product_categories {\\n        product_category\\n        id\\n        single: single_products(limit: 1) {\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { ProductsCategoryStyles } from './category.products.styles';\nvar PRODUCTS_CATEGORY = gql(_templateObject());\nexport default function ProductsCategory(_ref) {\n  _s();\n\n  var _this = this;\n\n  var productsCategory = _ref.productsCategory;\n\n  var _useQuery = useQuery(PRODUCTS_CATEGORY, {\n    variables: {\n      productsCategory: productsCategory\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ProductsCategoryStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category-title\",\n      children: productsCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), data.products[0].category.map(function (p) {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: p.product_category\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsCategory, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductsCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsCategory\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/products/products-page/category.products.js"],"names":["gql","useQuery","ProductsCategoryStyles","PRODUCTS_CATEGORY","ProductsCategory","productsCategory","variables","data","error","loading","message","products","category","map","p","product_category","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,sBAAT,QAAuC,4BAAvC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAiBA,eAAe,SAASI,gBAAT,OAAgD;AAAA;;AAAA;;AAAA,MAApBC,gBAAoB,QAApBA,gBAAoB;;AAAA,kBAC5BJ,QAAQ,CAACE,iBAAD,EAAoB;AAC3DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,gBAAgB,EAAhBA;AADS;AADgD,GAApB,CADoB;AAAA,MACrDE,IADqD,aACrDA,IADqD;AAAA,MAC/CC,KAD+C,aAC/CA,KAD+C;AAAA,MACxCC,OADwC,aACxCA,OADwC;;AAO7D,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE,QAAC,sBAAD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBAAgCL;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBC,QAAjB,CAA0BC,GAA1B,CAA8B,UAAAC,CAAC;AAAA,0BAC9B;AAAA,kBAAgBA,CAAC,CAACC;AAAlB,SAASD,CAAC,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,eAD8B;AAAA,KAA/B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlBuBZ,gB;UACWH,Q;;;KADXG,gB","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport { ProductsCategoryStyles } from './category.products.styles';\n\nconst PRODUCTS_CATEGORY = gql`\n  query PRODUCTS_CATEGORY($productsCategory: String!) {\n    products(where: { product_title: $productsCategory }) {\n      product_title\n      category: product_categories {\n        product_category\n        id\n        single: single_products(limit: 1) {\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProductsCategory({ productsCategory }) {\n  const { data, error, loading } = useQuery(PRODUCTS_CATEGORY, {\n    variables: {\n      productsCategory,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <ProductsCategoryStyles>\n      <h3 className='category-title'>{productsCategory}</h3>\n      {data.products[0].category.map(p => (\n        <h4 key={p.id}>{p.product_category}</h4>\n      ))}\n    </ProductsCategoryStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}