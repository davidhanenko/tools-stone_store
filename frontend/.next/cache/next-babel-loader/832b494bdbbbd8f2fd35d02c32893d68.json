{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { Slant as Hamburger } from 'hamburger-react';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport MenuLink from './MenuLink';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\nimport { useMenu } from '../../lib/menuState';\nconst PRODUCTS = gql`\n  query PRODUCTS {\n    products {\n      id\n      title: product_title\n      product_categories {\n        category: product_category\n      }\n    }\n  }\n`;\nexport default function ItemsMenu() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(PRODUCTS);\n  const {\n    isOpen,\n    setOpen,\n    btnClicked,\n    setBtnClicked,\n    closeMenu\n  } = useMenu();\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  const products = data === null || data === void 0 ? void 0 : data.products;\n  return /*#__PURE__*/_jsxs(ItemsMenuStyles, {\n    menuOpen: isOpen,\n    btnClicked: btnClicked,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"menu-header\",\n      children: [/*#__PURE__*/_jsx(MenuButtonStyles, {\n        onClick: () => setBtnClicked(true),\n        children: /*#__PURE__*/_jsx(Hamburger, {\n          hideOutline: false,\n          label: \"Show menu\",\n          toggled: isOpen,\n          toggle: setOpen\n        })\n      }), /*#__PURE__*/_jsx(\"h3\", {\n        className: \"main-title\",\n        children: \"Products\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"menu-links\",\n      children: products === null || products === void 0 ? void 0 : products.map(product => /*#__PURE__*/_jsx(MenuLink, {\n        product: product\n      }, product.id))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"side-menu-links \",\n      children: products === null || products === void 0 ? void 0 : products.map(product => /*#__PURE__*/_jsx(MenuLink, {\n        product: product,\n        onClick: () => setOpen(false)\n      }, product.id))\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}