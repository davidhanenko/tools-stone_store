{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Navbar/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useContext } from 'react/';\nimport { useEffect, useState } from 'react';\nimport { SearchStyles } from './SearchStyles';\nimport { MdSearch } from 'react-icons/md';\nimport { useScroll } from '../../lib/useScroll';\nexport default function Search(_ref) {\n  _s();\n\n  var offset = _ref.offset;\n\n  var _useState = useState(false),\n      isScroll = _useState[0],\n      setIsScroll = _useState[1];\n\n  var _useScroll = useScroll(),\n      scrollRef = _useScroll.scrollRef;\n\n  var handleScrollPos = function handleScrollPos() {\n    if (window.pageYOffset > 10 && window.pageYOffset < window.innerHeight) {\n      window.pageYOffset !== scrollRef.current.scrollPos && setIsScroll(true);\n      setTimeout(function () {\n        setIsScroll(false);\n        scrollRef.current.scrollPos = window.pageYOffset;\n      }, 500);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScrollPos);\n    return function () {\n      return window.removeEventListener('scroll', handleScrollPos);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    scroll: isScroll,\n    children: [/*#__PURE__*/_jsxDEV(MdSearch, {\n      className: \"search-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"ZqZmvV2sEUWcx5gi7GMpWW3g2hI=\", false, function () {\n  return [useScroll];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Navbar/Search.js"],"names":["useRef","useContext","useEffect","useState","SearchStyles","MdSearch","useScroll","Search","offset","isScroll","setIsScroll","scrollRef","handleScrollPos","window","pageYOffset","innerHeight","current","scrollPos","setTimeout","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,QAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,MAAT,OAA4B;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAAA,kBACTL,QAAQ,CAAC,KAAD,CADC;AAAA,MAClCM,QADkC;AAAA,MACxBC,WADwB;;AAAA,mBAEnBJ,SAAS,EAFU;AAAA,MAEjCK,SAFiC,cAEjCA,SAFiC;;AAIzC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIC,MAAM,CAACC,WAAP,GAAqB,EAArB,IAA2BD,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,WAA3D,EAAwE;AACtEF,MAAAA,MAAM,CAACC,WAAP,KAAuBH,SAAS,CAACK,OAAV,CAAkBC,SAAzC,IAAsDP,WAAW,CAAC,IAAD,CAAjE;AAEAQ,MAAAA,UAAU,CAAC,YAAM;AACfR,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,QAAAA,SAAS,CAACK,OAAV,CAAkBC,SAAlB,GAA8BJ,MAAM,CAACC,WAArC;AACD,OAHS,EAGP,GAHO,CAAV;AAID;AACF,GATD;;AAWAZ,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,eAAlC;AACA,WAAO;AAAA,aAAMC,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,eAArC,CAAN;AAAA,KAAP;AACD,GAHQ,CAAT;AAKA,sBACE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEH,QAAtB;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1BuBF,M;UAEAD,S;;;KAFAC,M","sourcesContent":["import { useRef, useContext } from 'react/';\nimport { useEffect, useState } from 'react';\nimport { SearchStyles } from './SearchStyles';\nimport { MdSearch } from 'react-icons/md';\nimport { useScroll } from '../../lib/useScroll';\n\nexport default function Search({ offset }) {\n  const [isScroll, setIsScroll] = useState(false);\n  const { scrollRef } = useScroll();\n\n  const handleScrollPos = () => {\n    if (window.pageYOffset > 10 && window.pageYOffset < window.innerHeight) {\n      window.pageYOffset !== scrollRef.current.scrollPos && setIsScroll(true);\n\n      setTimeout(() => {\n        setIsScroll(false);\n        scrollRef.current.scrollPos = window.pageYOffset;\n      }, 500);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScrollPos);\n    return () => window.removeEventListener('scroll', handleScrollPos);\n  });\n\n  return (\n    <SearchStyles scroll={isScroll}>\n      <MdSearch className='search-icon' />\n      <input type='text' placeholder='Search...' />\n    </SearchStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}