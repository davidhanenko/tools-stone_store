{"ast":null,"code":"import _slicedToArray from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Carousel/Carousel.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useEmblaCarousel } from 'embla-carousel/react';\nimport { DotButton, PrevButton, NextButton } from './CarouselButtons';\nimport { useRecursiveTimeout } from '../../lib/useRecursiveTimeout';\nimport CarouselStyles from './CarouselStyles';\nimport Slide from './Slide';\nvar AUTOPLAY_INTERVAL = 4000;\n\nvar EmblaCarousel = function EmblaCarousel(_ref) {\n  _s();\n\n  var slides = _ref.slides,\n      mediaByIndex = _ref.mediaByIndex;\n\n  // animation state\n  var _useState = useState(false),\n      animation = _useState[0],\n      setAnimation = _useState[1]; // key state for slides\n\n\n  var _useState2 = useState(Math.random()),\n      carouselRandomNumber = _useState2[0],\n      setCarouselRandomNumber = _useState2[1];\n\n  var _useEmblaCarousel = useEmblaCarousel({\n    loop: true,\n    skipSnaps: false,\n    speed: 8\n  }),\n      _useEmblaCarousel2 = _slicedToArray(_useEmblaCarousel, 2),\n      viewportRef = _useEmblaCarousel2[0],\n      embla = _useEmblaCarousel2[1];\n\n  var _useState3 = useState(false),\n      prevBtnEnabled = _useState3[0],\n      setPrevBtnEnabled = _useState3[1];\n\n  var _useState4 = useState(false),\n      nextBtnEnabled = _useState4[0],\n      setNextBtnEnabled = _useState4[1];\n\n  var _useState5 = useState(0),\n      selectedIndex = _useState5[0],\n      setSelectedIndex = _useState5[1];\n\n  var _useState6 = useState([]),\n      scrollSnaps = _useState6[0],\n      setScrollSnaps = _useState6[1];\n\n  var autoplay = useCallback(function () {\n    if (!embla) return;\n\n    if (embla.canScrollNext()) {\n      embla.scrollNext(); // setCarouselRandomNumber(Math.random());\n\n      setAnimation(true);\n    } else {\n      embla.scrollTo(0); // setCarouselRandomNumber(Math.random());\n\n      setAnimation(true);\n    }\n  }, [embla]);\n\n  var _useRecursiveTimeout = useRecursiveTimeout(autoplay, AUTOPLAY_INTERVAL),\n      play = _useRecursiveTimeout.play,\n      stop = _useRecursiveTimeout.stop;\n\n  var scrollNext = useCallback(function () {\n    if (!embla) return; // setCarouselRandomNumber(Math.random());\n\n    embla.scrollNext();\n    stop();\n  }, [embla, stop]);\n  var scrollPrev = useCallback(function () {\n    if (!embla) return; // setCarouselRandomNumber(Math.random());\n\n    embla.scrollPrev();\n    stop();\n  }, [embla, stop]);\n  var scrollTo = useCallback(function (index) {\n    // setCarouselRandomNumber(Math.random());\n    embla && embla.scrollTo(index), [embla];\n  });\n  var onSelect = useCallback(function () {\n    if (!embla) return;\n    setSelectedIndex(embla.selectedScrollSnap());\n    setPrevBtnEnabled(embla.canScrollPrev());\n    setNextBtnEnabled(embla.canScrollNext());\n  }, [embla, setSelectedIndex]);\n  useEffect(function () {\n    if (!embla) return;\n    onSelect();\n    setCarouselRandomNumber(Math.random());\n    setScrollSnaps(embla.scrollSnapList());\n    embla.on('select', onSelect);\n    embla.on('pointerDown', stop);\n  }, [embla, onSelect, setScrollSnaps, stop]); // useEffect(() => {\n  //   setCarouselRandomNumber(Math.random());\n  // }, [animation]);\n\n  useEffect(function () {\n    play();\n  }, [play]);\n  console.log(carouselRandomNumber);\n  return /*#__PURE__*/_jsxDEV(CarouselStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"embla__viewport\",\n      ref: viewportRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embla__container\",\n        children: slides.map(function (index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"embla__slide\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"embla__slide__inner\",\n              children: /*#__PURE__*/_jsxDEV(Slide, {\n                mediaByIndex: mediaByIndex,\n                index: index,\n                setAnimation: setAnimation,\n                a: animation\n              }, carouselRandomNumber, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(PrevButton, {\n      onClick: scrollPrev,\n      enabled: prevBtnEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(NextButton, {\n      onClick: scrollNext,\n      enabled: nextBtnEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"embla__dots\",\n      children: scrollSnaps.map(function (_, index) {\n        return /*#__PURE__*/_jsxDEV(DotButton, {\n          selected: index === selectedIndex,\n          onClick: function onClick() {\n            return scrollTo(index);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EmblaCarousel, \"kpQQn8dnJGGD01E2fWjx0JUxuJU=\", false, function () {\n  return [useEmblaCarousel, useRecursiveTimeout];\n});\n\n_c = EmblaCarousel;\nexport default EmblaCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmblaCarousel\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Carousel/Carousel.js"],"names":["React","useState","useEffect","useCallback","useEmblaCarousel","DotButton","PrevButton","NextButton","useRecursiveTimeout","CarouselStyles","Slide","AUTOPLAY_INTERVAL","EmblaCarousel","slides","mediaByIndex","animation","setAnimation","Math","random","carouselRandomNumber","setCarouselRandomNumber","loop","skipSnaps","speed","viewportRef","embla","prevBtnEnabled","setPrevBtnEnabled","nextBtnEnabled","setNextBtnEnabled","selectedIndex","setSelectedIndex","scrollSnaps","setScrollSnaps","autoplay","canScrollNext","scrollNext","scrollTo","play","stop","scrollPrev","index","onSelect","selectedScrollSnap","canScrollPrev","scrollSnapList","on","console","log","map","_"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useEmblaCarousel } from 'embla-carousel/react';\nimport { DotButton, PrevButton, NextButton } from './CarouselButtons';\nimport { useRecursiveTimeout } from '../../lib/useRecursiveTimeout';\nimport CarouselStyles from './CarouselStyles';\nimport Slide from './Slide';\n\nconst AUTOPLAY_INTERVAL = 4000;\n\nconst EmblaCarousel = ({ slides, mediaByIndex }) => {\n  // animation state\n  const [animation, setAnimation] = useState(false);\n  // key state for slides\n  const [carouselRandomNumber, setCarouselRandomNumber] = useState(\n    Math.random()\n  );\n\n  const [viewportRef, embla] = useEmblaCarousel({\n    loop: true,\n    skipSnaps: false,\n    speed: 8,\n  });\n  const [prevBtnEnabled, setPrevBtnEnabled] = useState(false);\n  const [nextBtnEnabled, setNextBtnEnabled] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [scrollSnaps, setScrollSnaps] = useState([]);\n\n  const autoplay = useCallback(() => {\n    if (!embla) return;\n    if (embla.canScrollNext()) {\n      embla.scrollNext();\n      // setCarouselRandomNumber(Math.random());\n      setAnimation(true);\n    } else {\n      embla.scrollTo(0);\n      // setCarouselRandomNumber(Math.random());\n      setAnimation(true);\n    }\n  }, [embla]);\n\n  const { play, stop } = useRecursiveTimeout(autoplay, AUTOPLAY_INTERVAL);\n\n  const scrollNext = useCallback(() => {\n    if (!embla) return;\n    // setCarouselRandomNumber(Math.random());\n    embla.scrollNext();\n    stop();\n  }, [embla, stop]);\n\n  const scrollPrev = useCallback(() => {\n    if (!embla) return;\n    // setCarouselRandomNumber(Math.random());\n    embla.scrollPrev();\n    stop();\n  }, [embla, stop]);\n\n  const scrollTo = useCallback(index => {\n    // setCarouselRandomNumber(Math.random());\n    embla && embla.scrollTo(index), [embla];\n  });\n\n  const onSelect = useCallback(() => {\n    if (!embla) return;\n    setSelectedIndex(embla.selectedScrollSnap());\n    setPrevBtnEnabled(embla.canScrollPrev());\n    setNextBtnEnabled(embla.canScrollNext());\n  }, [embla, setSelectedIndex]);\n\n  useEffect(() => {\n    if (!embla) return;\n    onSelect();\n    setCarouselRandomNumber(Math.random());\n    setScrollSnaps(embla.scrollSnapList());\n    embla.on('select', onSelect);\n    embla.on('pointerDown', stop);\n  }, [embla, onSelect, setScrollSnaps, stop,]);\n\n  // useEffect(() => {\n  //   setCarouselRandomNumber(Math.random());\n  // }, [animation]);\n\n  useEffect(() => {\n    play();\n  }, [play]);\n\n  console.log(carouselRandomNumber);\n\n  return (\n    <CarouselStyles>\n      <div className='embla__viewport' ref={viewportRef}>\n        <div className='embla__container'>\n          {slides.map(index => (\n            <div className='embla__slide' key={index}>\n              <div className='embla__slide__inner'>\n                <Slide\n                  key={carouselRandomNumber}\n                  mediaByIndex={mediaByIndex}\n                  index={index}\n                  setAnimation={setAnimation}\n                  a={animation}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <PrevButton onClick={scrollPrev} enabled={prevBtnEnabled} />\n      <NextButton onClick={scrollNext} enabled={nextBtnEnabled} />\n      <div className='embla__dots'>\n        {scrollSnaps.map((_, index) => (\n          <DotButton\n            key={index}\n            selected={index === selectedIndex}\n            onClick={() => scrollTo(index)}\n          />\n        ))}\n      </div>\n    </CarouselStyles>\n  );\n};\n\nexport default EmblaCarousel;\n"]},"metadata":{},"sourceType":"module"}