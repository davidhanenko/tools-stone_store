{"ast":null,"code":"import _toConsumableArray from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/* eslint-disable no-inner-declarations */\nimport { useState, useEffect } from 'react';\n\nfunction debounce(fn, ms) {\n  var _arguments = arguments,\n      _this = this;\n\n  var timer;\n  return function (_) {\n    clearTimeout(timer);\n    timer = setTimeout(function (_) {\n      timer = null;\n      fn.apply.apply(fn, [_this].concat(_toConsumableArray(_arguments)));\n    }, ms);\n  };\n}\n\nexport default function useWindowDimensions() {\n  // const hasWindow = typeof window !== 'undefined';\n  // function getWindowDimensions() {\n  //   const width = hasWindow ? window.innerWidth : null;\n  //   const height = hasWindow ? window.innerHeight : null;\n  //   return {\n  //     width,\n  //     height,\n  //   };\n  // }\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    var debouncedHandleResize = debounce(function handleResize() {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }, 0);\n    window.addEventListener('resize', debouncedHandleResize);\n    return function () {\n      return window.removeEventListener('resize', debouncedHandleResize);\n    };\n  }, []);\n  return windowDimensions;\n}","map":null,"metadata":{},"sourceType":"module"}