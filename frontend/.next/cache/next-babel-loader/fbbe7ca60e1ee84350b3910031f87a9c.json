{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEMS($item: String!) {\\n    single_item: singleItems(where: { item_title: $item }) {\\n      id\\n      item_title\\n      price\\n      description\\n      image {\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\nimport SingleItem from '../../../../components/items/items-page/single-item/SingleItem';\nvar SINGLE_ITEM = gql(_templateObject());\nexport default function ProductsPage(_ref) {\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ITEM, {\n    variables: {\n      item: formatUrlToDbName(query.single)\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var singleItem = data === null || data === void 0 ? void 0 : data.single_item[0];\n  return /*#__PURE__*/_jsx(SingleItem, {\n    singleItem: singleItem\n  });\n}","map":null,"metadata":{},"sourceType":"module"}