{"ast":null,"code":"import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport { getDataFromTree } from '@apollo/client/react/ssr';\nimport gql from 'graphql-tag';\nimport withApollo from '../../../lib/withData'; // const client = new ApolloClient({\n//   uri: 'http://localhost:1337/graphql',\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n\nconst media = [];\nwithApollo.create.query({\n  query: gql`\n      {\n        mPage {\n          image_1 {\n            id\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `\n}).then(response => media.push(response.data.mPage.image_1[0].url, response.data.mPage.image_2[0].url)).catch(err => console.error(err));\nexport { media };\nexport const mediaByIndex = index => media[index % media.length];","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Carousel/media/index.js"],"names":["useQuery","InMemoryCache","ApolloClient","getDataFromTree","gql","withApollo","media","create","query","then","response","push","data","mPage","image_1","url","image_2","catch","err","console","error","mediaByIndex","index","length"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,EAAd;AAEAD,UAAU,CAACE,MAAX,CACGC,KADH,CACS;AACLA,EAAAA,KAAK,EAAEJ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdS,CADT,EAiBGK,IAjBH,CAiBSC,QAAD,IACJJ,KAAK,CAACK,IAAN,CACED,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,OAApB,CAA4B,CAA5B,EAA+BC,GADjC,EAEEL,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBG,OAApB,CAA4B,CAA5B,EAA+BD,GAFjC,CAlBJ,EAuBGE,KAvBH,CAuBUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAvBlB;AAyBA,SAASZ,KAAT;AACA,OAAO,MAAMe,YAAY,GAAIC,KAAD,IAAWhB,KAAK,CAACgB,KAAK,GAAGhB,KAAK,CAACiB,MAAf,CAArC","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport { getDataFromTree } from '@apollo/client/react/ssr';\nimport gql from 'graphql-tag';\nimport withApollo from '../../../lib/withData';\n\n// const client = new ApolloClient({\n//   uri: 'http://localhost:1337/graphql',\n//   cache: new InMemoryCache(),\n//   connectToDevTools: true,\n// });\n\nconst media = [];\n\nwithApollo.create\n  .query({\n    query: gql`\n      {\n        mPage {\n          image_1 {\n            id\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `,\n  })\n  .then((response) =>\n    media.push(\n      response.data.mPage.image_1[0].url,\n      response.data.mPage.image_2[0].url\n    )\n  )\n  .catch((err) => console.error(err));\n\nexport { media };\nexport const mediaByIndex = (index) => media[index % media.length];\n"]},"metadata":{},"sourceType":"module"}