{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/[collection]/[single].js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\nimport SingleItem from '../../../../components/items/items-page/SingleItem';\nconst SINGLE_ITEM = gql`\n  query SINGLE_ITEMS($item: String!) {\n    single_item: singleItems(where: { item_title: $item }) {\n      id\n      item_title\n      price\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\nexport default function ProductsPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ITEM, {\n    variables: {\n      item: formatUrlToDbName(query.item)\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  const singleItem = data === null || data === void 0 ? void 0 : data.single_item[0];\n  return /*#__PURE__*/_jsxDEV(SingleItem, {\n    singleItem: singleItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/[collection]/[single].js"],"names":["gql","useQuery","formatUrlToDbName","SingleItem","SINGLE_ITEM","ProductsPage","query","data","error","loading","variables","item","message","singleItem","single_item"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AAEA,MAAMC,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASK,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAiC;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BR,QAAQ,CAACG,WAAD,EAAc;AACrDM,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAET,iBAAiB,CAACI,KAAK,CAACK,IAAP;AADd;AAD0C,GAAd,CAAzC;AAMA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMC,UAAU,GAAIN,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEO,WAAN,CAAkB,CAAlB,CAApB;AAEA,sBACI,QAAC,UAAD;AAAY,IAAA,UAAU,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\nimport SingleItem from '../../../../components/items/items-page/SingleItem';\n\nconst SINGLE_ITEM = gql`\n  query SINGLE_ITEMS($item: String!) {\n    single_item: singleItems(where: { item_title: $item }) {\n      id\n      item_title\n      price\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\n\nexport default function ProductsPage({ query }) {\n  const { data, error, loading } = useQuery(SINGLE_ITEM, {\n    variables: {\n      item: formatUrlToDbName(query.item),\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const singleItem =  data?.single_item[0];\n  \n  return (\n      <SingleItem singleItem={singleItem} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}