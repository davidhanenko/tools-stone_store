{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsByCategory from '../../../components/items/items-page/items-by-category/ItemsByCategory';\nimport { formatUrlToDbName } from '../../../helpers/formatUrl';\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS($service: String!, $itemsCategory: String!) {\n    services(where: { service: $service }) {\n      service\n      items(where: { title: $itemsCategory }) {\n        title\n        category: items_categories {\n          category_title\n          id\n          single_item: single_items(limit: 1) {\n            item_title\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ProductsCategoryPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS, {\n    variables: {\n      service: 'products',\n      itemsCategory: formatUrlToDbName(query.products)\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  const items = data.services[0].items[0];\n  return /*#__PURE__*/_jsx(ItemsByCategory, {\n    items: items\n  });\n}","map":null,"metadata":{},"sourceType":"module"}