{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/items/items-page/ItemsCategory.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsSubCategory from './ItemsSubCategory';\nimport { ItemsCategoryStyles } from './ItemsCategoryStyles';\nconst ITEMS_CATEGORY = gql`\n  query ITEMS_CATEGORY($id: ID!) {\n    products(where: { id: $id }) {\n      product_title\n      category: product_categories {\n        category_title: product_category\n        id\n        single_item: single_products(limit: 1) {\n          item_title\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ItemsCategory({\n  itemsCategory,\n  id\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ITEMS_CATEGORY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  const product = data === null || data === void 0 ? void 0 : data.products[0];\n  const productTitle = product === null || product === void 0 ? void 0 : product.product_title;\n  return /*#__PURE__*/_jsxDEV(ItemsCategoryStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category-title\",\n      children: itemsCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: product.category.map(subCategory => /*#__PURE__*/_jsxDEV(ItemsSubCategory, {\n        subCategory: subCategory,\n        title: productTitle\n      }, subCategory.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/items/items-page/ItemsCategory.js"],"names":["gql","useQuery","ItemsSubCategory","ItemsCategoryStyles","ITEMS_CATEGORY","ItemsCategory","itemsCategory","id","data","error","loading","variables","message","product","products","productTitle","product_title","category","map","subCategory"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,MAAMC,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASK,aAAT,CAAuB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAvB,EAA8C;AAC3D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BT,QAAQ,CAACG,cAAD,EAAiB;AACxDO,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AAD6C,GAAjB,CAAzC;AAQA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEV,QAAMC,OAAO,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEM,QAAN,CAAe,CAAf,CAAhB;AACA,QAAMC,YAAY,GAAGF,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEG,aAA9B;AAED,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBAAgCV;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGO,OAAO,CAACI,QAAR,CAAiBC,GAAjB,CAAqBC,WAAW,iBAC/B,QAAC,gBAAD;AAEE,QAAA,WAAW,EAAEA,WAFf;AAGE,QAAA,KAAK,EAAEJ;AAHT,SACOI,WAAW,CAACZ,EADnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport ItemsSubCategory from './ItemsSubCategory';\nimport { ItemsCategoryStyles } from './ItemsCategoryStyles';\n\nconst ITEMS_CATEGORY = gql`\n  query ITEMS_CATEGORY($id: ID!) {\n    products(where: { id: $id }) {\n      product_title\n      category: product_categories {\n        category_title: product_category\n        id\n        single_item: single_products(limit: 1) {\n          item_title\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ItemsCategory({ itemsCategory, id }) {\n  const { data, error, loading } = useQuery(ITEMS_CATEGORY, {\n    variables: {\n      id,\n    },\n  });\n\n \n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n   const product = data?.products[0];\n   const productTitle = product?.product_title;\n\n  return (\n    <ItemsCategoryStyles>\n      <h3 className='category-title'>{itemsCategory}</h3>\n      <div className='category'>\n        {product.category.map(subCategory => (\n          <ItemsSubCategory\n            key={subCategory.id}\n            subCategory={subCategory}\n            title={productTitle}\n            \n          />\n        ))}\n      </div>\n    </ItemsCategoryStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}