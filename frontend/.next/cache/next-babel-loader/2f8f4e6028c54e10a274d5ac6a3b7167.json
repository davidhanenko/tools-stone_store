{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/menu/MenuDropdown.js\";\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nimport { DropdownStyles, DropdownBtnStyles, DropdownItemStyles, DropdownMenuStyles } from './MenuDropdownStyles';\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  href,\n  onClick,\n  menuItem\n}, ref) => {\n  const {\n    closeMenu\n  } = useMenu();\n  return /*#__PURE__*/_jsxDEV(DropdownItemStyles, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      onClick: () => closeMenu(),\n      ref: ref,\n      children: menuItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n});\nconst MenuDropdown = /*#__PURE__*/React.forwardRef(function MenuDropdown(props, ref) {\n  var _props$categories;\n\n  const {\n    0: dropdownOpen,\n    1: setDropdownOpen\n  } = useState(false);\n  const {\n    isOpen\n  } = useMenu();\n  const {\n    width\n  } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !isOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !isOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(DropdownStyles, {\n    onMouseOver: mouseEnter,\n    onMouseLeave: mouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btns-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        ref: ref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownBtnStyles, {\n        type: \"button\",\n        onClick: showDropdown,\n        disabled: !isOpen || width > 850,\n        children: dropdownOpen && isOpen ? /*#__PURE__*/_jsxDEV(MdExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(MdExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(DropdownMenuStyles, {\n      children: props === null || props === void 0 ? void 0 : (_props$categories = props.categories) === null || _props$categories === void 0 ? void 0 : _props$categories.map(category => /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/products/[products]/[collection]',\n          query: {\n            products: `${formatUrlToRoute(category.category)}`,\n            collection: `${formatUrlToRoute(subCategory.category_title)}`\n          }\n        },\n        passHref: true,\n        children: /*#__PURE__*/_jsxDEV(DropdownItem, {\n          menuItem: category === null || category === void 0 ? void 0 : category.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n});\nexport default MenuDropdown;","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/menu/MenuDropdown.js"],"names":["React","useState","useEffect","Link","MdExpandMore","MdExpandLess","useMenu","useWindowDimensions","formatUrlToRoute","DropdownStyles","DropdownBtnStyles","DropdownItemStyles","DropdownMenuStyles","DropdownItem","forwardRef","href","onClick","menuItem","ref","closeMenu","MenuDropdown","props","dropdownOpen","setDropdownOpen","isOpen","width","showDropdown","mouseEnter","mouseLeave","isMounted","title","categories","map","category","pathname","query","products","collection","subCategory","category_title","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\n\nimport { useMenu } from '../../context/menuState';\n\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\n\nimport {\n  DropdownStyles,\n  DropdownBtnStyles,\n  DropdownItemStyles,\n  DropdownMenuStyles,\n} from './MenuDropdownStyles';\n\nconst DropdownItem = React.forwardRef(({ href, onClick, menuItem }, ref) => {\n  const { closeMenu } = useMenu();\n  \n  return (\n    <DropdownItemStyles>\n      <a href={href} onClick={() => closeMenu()} ref={ref}>\n        {menuItem}\n      </a>\n    </DropdownItemStyles>\n  );\n});\n\nconst MenuDropdown = React.forwardRef(function MenuDropdown(props, ref) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const { isOpen } = useMenu();\n  const { width } = useWindowDimensions();\n\n  const showDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const mouseEnter = () => {\n    !isOpen && setDropdownOpen(true);\n  };\n\n  const mouseLeave = () => {\n    !isOpen && setDropdownOpen(false);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    if (width >= 850) {\n      setDropdownOpen(false);\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n\n  return (\n    <DropdownStyles onMouseOver={mouseEnter} onMouseLeave={mouseLeave}>\n      <div className='dropdown-btns-group'>\n        <a href={props.href} ref={ref}>\n          {props.title}\n        </a>\n        <DropdownBtnStyles\n          type='button'\n          onClick={showDropdown}\n          disabled={!isOpen || width > 850}\n        >\n          {dropdownOpen && isOpen ? <MdExpandLess /> : <MdExpandMore />}\n        </DropdownBtnStyles>\n      </div>\n\n      {dropdownOpen && (\n        <DropdownMenuStyles>\n          {props?.categories?.map(category => (\n            <Link\n              href={{\n                pathname: '/products/[products]/[collection]',\n                query: {\n                  products: `${formatUrlToRoute(category.category)}`,\n                  collection: `${formatUrlToRoute(subCategory.category_title)}`,\n                },\n              }}\n              key={category.id}\n              passHref\n            >\n              <DropdownItem menuItem={category?.category} />\n            </Link>\n          ))}\n        </DropdownMenuStyles>\n      )}\n    </DropdownStyles>\n  );\n});\n\nexport default MenuDropdown;\n"]},"metadata":{},"sourceType":"module"}