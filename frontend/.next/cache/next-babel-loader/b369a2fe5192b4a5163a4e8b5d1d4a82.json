{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Slant as Hamburger } from 'hamburger-react';\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport MenuLink from './MenuLink';\nimport MenuTree from './MenuTree';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\nconst SERVICE_MENU_QUERY = gql`\n  query SERVICE_MENU_QUERY($service: String!) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        items_categories {\n          id\n          category: category_title\n        }\n      }\n    }\n  }\n`;\nexport default function ItemsMenu({}) {\n  var _data$services$;\n\n  const router = useRouter();\n  const service = router.asPath.split('/')[1];\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SERVICE_MENU_QUERY, {\n    variables: {\n      service: service\n    }\n  });\n  const {\n    isOpen,\n    setOpen,\n    btnClicked,\n    setBtnClicked,\n    closeMenu\n  } = useMenu();\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  const menuItems = data === null || data === void 0 ? void 0 : (_data$services$ = data.services[0]) === null || _data$services$ === void 0 ? void 0 : _data$services$.items;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(ItemsMenuStyles, {\n      menuOpen: isOpen,\n      btnClicked: btnClicked,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsx(MenuButtonStyles, {\n          onClick: () => setBtnClicked(true),\n          children: /*#__PURE__*/_jsx(Hamburger, {\n            hideOutline: false,\n            label: \"Show menu\",\n            toggled: isOpen,\n            toggle: setOpen\n          })\n        }), /*#__PURE__*/_jsx(\"h3\", {\n          className: \"main-title\",\n          children: service\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"menu-links\",\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(menuItem => /*#__PURE__*/_jsx(MenuLink, {\n          menuItem: menuItem\n        }, menuItem.id))\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"side-menu-links\",\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(menuItem => /*#__PURE__*/_jsx(MenuLink, {\n          menuItem: menuItem,\n          onClick: () => {\n            setOpen(false);\n          }\n        }, menuItem.id))\n      })]\n    }), /*#__PURE__*/_jsx(MenuTree, {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}