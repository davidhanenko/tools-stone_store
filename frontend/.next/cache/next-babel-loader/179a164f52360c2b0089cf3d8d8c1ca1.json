{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/menu/ItemsMenu.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Slant as Hamburger } from 'hamburger-react';\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport MenuLink from './MenuLink';\nimport MenuTree from './MenuTree';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\nconst SERVICE_MENU_QUERY = gql`\n  query SERVICE_MENU_QUERY($service: String!) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        items_categories {\n          id\n          category: category_title\n        }\n      }\n    }\n  }\n`;\nexport default function ItemsMenu({}) {\n  var _products;\n\n  const router = useRouter();\n  const service = router.asPath.split('/')[1];\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SERVICE_MENU_QUERY, {\n    variables: {\n      service: service\n    }\n  });\n  const {\n    isOpen,\n    setOpen,\n    btnClicked,\n    setBtnClicked,\n    closeMenu\n  } = useMenu();\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  const menuItems = data === null || data === void 0 ? void 0 : data.items;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ItemsMenuStyles, {\n      menuOpen: isOpen,\n      btnClicked: btnClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-header\",\n        children: [/*#__PURE__*/_jsxDEV(MenuButtonStyles, {\n          onClick: () => setBtnClicked(true),\n          children: /*#__PURE__*/_jsxDEV(Hamburger, {\n            hideOutline: false,\n            label: \"Show menu\",\n            toggled: isOpen,\n            toggle: setOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"main-title\",\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-links\",\n        children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(menuItem => /*#__PURE__*/_jsxDEV(MenuLink, {\n          menuItem: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-links\",\n        children: (_products = products) === null || _products === void 0 ? void 0 : _products.map(product => /*#__PURE__*/_jsxDEV(MenuLink, {\n          product: product,\n          onClick: () => {\n            setOpen(false);\n          }\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuTree, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/menu/ItemsMenu.js"],"names":["gql","useQuery","useEffect","useRouter","Slant","Hamburger","useMenu","useWindowDimensions","MenuLink","MenuTree","ItemsMenuStyles","MenuButtonStyles","SERVICE_MENU_QUERY","ItemsMenu","router","service","asPath","split","data","error","loading","variables","isOpen","setOpen","btnClicked","setBtnClicked","closeMenu","width","message","menuItems","items","map","menuItem","product","id","products"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Slant as Hamburger } from 'hamburger-react';\n\nimport { useMenu } from '../../context/menuState';\nimport useWindowDimensions from '../../lib/windowDimensions';\n\nimport MenuLink from './MenuLink';\nimport MenuTree from './MenuTree';\nimport { ItemsMenuStyles, MenuButtonStyles } from './ItemsMenuStyles';\n\nconst SERVICE_MENU_QUERY = gql`\n  query SERVICE_MENU_QUERY($service: String!) {\n    services(where: { service: $service }) {\n      items {\n        id\n        title\n        items_categories {\n          id\n          category: category_title\n        }\n      }\n    }\n  }\n`;\n\nexport default function ItemsMenu({}) {\n  const router = useRouter();\n  const service = router.asPath.split('/')[1];\n\n  const { data, error, loading } = useQuery(SERVICE_MENU_QUERY, {\n    variables: {\n      service: service,\n    },\n  });\n\n  const { isOpen, setOpen, btnClicked, setBtnClicked, closeMenu } = useMenu();\n\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    if (width >= 850) {\n      closeMenu();\n    }\n  }, [width]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const menuItems = data?.items;\n\n  return (\n    <>\n      <ItemsMenuStyles menuOpen={isOpen} btnClicked={btnClicked}>\n        <div className='menu-header'>\n          <MenuButtonStyles onClick={() => setBtnClicked(true)}>\n            <Hamburger\n              hideOutline={false}\n              label='Show menu'\n              toggled={isOpen}\n              toggle={setOpen}\n            />\n          </MenuButtonStyles>\n\n          <h3 className='main-title'>Products</h3>\n        </div>\n        <div className='menu-links'>\n          {menuItems?.map(menuItem => (\n            <MenuLink menuItem={product} key={product.id} />\n          ))}\n        </div>\n\n        <div className='side-menu-links'>\n          {products?.map(product => (\n            <MenuLink\n              product={product}\n              key={product.id}\n              onClick={() => {\n                setOpen(false);\n              }}\n            />\n          ))}\n        </div>\n      </ItemsMenuStyles>\n\n      <MenuTree />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}