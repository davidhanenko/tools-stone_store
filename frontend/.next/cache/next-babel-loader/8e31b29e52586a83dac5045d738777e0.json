{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/navbar/Nav.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery PRODUCTS {\\n    services {\\n      service\\n      id\\n      items {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Link from 'next/link';\nimport Hamburger from 'hamburger-react';\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\nimport NavDropdown from './NavDropdown';\nimport { NavStyles, NavButtonStyles } from './NavStyles';\nimport Search from './Search';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\nvar PRODUCTS = gql(_templateObject());\nexport default function Nav() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(PRODUCTS),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this); // services to spread in nav\n\n  var services = data === null || data === void 0 ? void 0 : data.services;\n  var navRef = useRef();\n\n  var _useNav = useNav(),\n      navOpen = _useNav.navOpen,\n      toggleNav = _useNav.toggleNav,\n      closeSideNav = _useNav.closeSideNav,\n      navBtnClick = _useNav.navBtnClick,\n      setNavBtnClick = _useNav.setNavBtnClick;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width; // close toggled nav on click outside\n\n\n  useEffect(function () {\n    //  click outside nav handler\n    var handleClickOutside = function handleClickOutside(event) {\n      if (navOpen && !navRef.current.contains(event.target)) {\n        closeSideNav();\n      }\n    }; //  click outside nav listener\n\n\n    document.addEventListener('mousedown', handleClickOutside); // cleanup the event listener\n\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [navOpen]); // close nav when width more than 850px\n\n  useEffect(function () {\n    var isMounted = true;\n\n    if (width >= 850) {\n      closeSideNav();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [width]);\n  var router = useRouter(); // link button\n\n  var LinkBtn = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n    var href = _ref.href,\n        title = _ref.title;\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      onClick: function onClick() {\n        return closeSideNav();\n      },\n      ref: ref,\n      className: router.asPath.split('/')[1] === title ? 'active-link link-item' : 'link-item',\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavStyles, {\n      open: navOpen,\n      btnClick: navBtnClick,\n      width: width,\n      ref: navRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'home',\n            page: ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/about\",\n          className: \"link-item\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'about'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), services.map(function (service) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\".concat(service.service),\n            passHref: true,\n            children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n              title: service.service,\n              items: service.items\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, _this)\n          }, service.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/gallery\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'gallery'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/contacts\",\n          passHref: true,\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n            title: 'contacts'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButtonStyles, {\n        onClick: function onClick() {\n          return setNavBtnClick(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(Hamburger, {\n          hideOutline: false,\n          label: \"Show menu\",\n          toggled: navOpen,\n          toggle: toggleNav\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Nav, \"Pi+pH4y6jxSPZYPouN3jsEWY/Qs=\", false, function () {\n  return [useQuery, useNav, useWindowDimensions, useRouter];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/navbar/Nav.js"],"names":["React","useEffect","useRef","useRouter","gql","useQuery","Link","Hamburger","useNav","useWindowDimensions","NavDropdown","NavStyles","NavButtonStyles","Search","formatUrlToRoute","PRODUCTS","Nav","data","error","loading","message","services","navRef","navOpen","toggleNav","closeSideNav","navBtnClick","setNavBtnClick","width","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","isMounted","router","LinkBtn","forwardRef","ref","href","title","asPath","split","map","service","items","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Link from 'next/link';\nimport Hamburger from 'hamburger-react';\n\nimport { useNav } from '../../context/navState';\nimport useWindowDimensions from '../../lib/windowDimensions';\n\nimport NavDropdown from './NavDropdown';\nimport { NavStyles, NavButtonStyles } from './NavStyles';\nimport Search from './Search';\nimport { formatUrlToRoute } from '../../helpers/formatUrl';\n\nconst PRODUCTS = gql`\nquery PRODUCTS {\n    services {\n      service\n      id\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport default function Nav() {\n  const { data, error, loading } = useQuery(PRODUCTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  // services to spread in nav\n  const services = data?.services;\n\n  const navRef = useRef();\n\n  const { navOpen, toggleNav, closeSideNav, navBtnClick, setNavBtnClick } =\n    useNav();\n\n  const { width } = useWindowDimensions();\n\n  // close toggled nav on click outside\n  useEffect(() => {\n    //  click outside nav handler\n    const handleClickOutside = event => {\n      if (navOpen && !navRef.current.contains(event.target)) {\n        closeSideNav();\n      }\n    };\n\n    //  click outside nav listener\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // cleanup the event listener\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [navOpen]);\n\n  // close nav when width more than 850px\n  useEffect(() => {\n    let isMounted = true;\n    if (width >= 850) {\n      closeSideNav();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [width]);\n\n  const router = useRouter();\n\n// link button\n  const LinkBtn = React.forwardRef(({ href, title }, ref) => {\n    return (\n      <a\n        href={href}\n        onClick={() => closeSideNav()}\n        ref={ref}\n        className={\n         router.asPath.split('/')[1] === title\n            ? 'active-link link-item'\n            : 'link-item'\n        }\n      >\n        {title}\n      </a>\n    );\n  });\n\n\n  return (\n    <>\n      <NavStyles\n        open={navOpen}\n        btnClick={navBtnClick}\n        width={width}\n        ref={navRef}\n      >\n        <div className='nav-links'>\n          <Link\n            href='/'\n            passHref\n          >\n            <LinkBtn title={'home'} page={''} />\n          </Link>\n          <Link\n            href='/about'\n            className='link-item'\n            passHref\n          >\n            <LinkBtn title={'about'} />\n          </Link>\n\n          {services.map(service => (\n            <Link key={service.id} href={`/${service.service}`} passHref>\n              <NavDropdown title={service.service} items={service.items} />\n            </Link>\n          ))}\n\n          <Link href='/gallery' passHref>\n            <LinkBtn title={'gallery'} />\n          </Link>\n          <Link href='/contacts' passHref>\n            <LinkBtn title={'contacts'} />\n          </Link>\n        </div>\n        <NavButtonStyles onClick={() => setNavBtnClick(true)}>\n          <Hamburger\n            hideOutline={false}\n            label='Show menu'\n            toggled={navOpen}\n            toggle={toggleNav}\n          />\n        </NavButtonStyles>\n      </NavStyles>\n      <Search />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}