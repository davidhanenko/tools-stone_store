{"ast":null,"code":"import _objectDestructuringEmpty from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PRODUCTS($service: String) {\\n    services(where: { service: $service }) {\\n      items {\\n        id\\n        title\\n        category: items_categories(limit: 1) {\\n          single_item: single_items {\\n            image {\\n              url\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsStyles';\nvar PRODUCTS = gql(_templateObject());\nexport default function ItemsMainPage(_ref) {\n  var _data$services$0$item;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useQuery = useQuery(PRODUCTS, {\n    variables: {\n      service: 'products'\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var SLIDE_COUNT = data === null || data === void 0 ? void 0 : (_data$services$0$item = data.services[0].items) === null || _data$services$0$item === void 0 ? void 0 : _data$services$0$item.length;\n  var slides = Array.from(Array(SLIDE_COUNT).keys()); // func from Embla Carousel docs\n\n  var itemsByIndex = function itemsByIndex(index) {\n    var _data$services$, _data$services$2, _data$services$2$item;\n\n    return data === null || data === void 0 ? void 0 : (_data$services$ = data.services[0]) === null || _data$services$ === void 0 ? void 0 : _data$services$.items[index % (data === null || data === void 0 ? void 0 : (_data$services$2 = data.services[0]) === null || _data$services$2 === void 0 ? void 0 : (_data$services$2$item = _data$services$2.items) === null || _data$services$2$item === void 0 ? void 0 : _data$services$2$item.length)];\n  };\n\n  return /*#__PURE__*/_jsxs(ItemsMainPageStyles, {\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"Products\"\n    }), data && /*#__PURE__*/_jsx(ItemsSlider, {\n      slides: slides,\n      itemsByIndex: itemsByIndex\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}