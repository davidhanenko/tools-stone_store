{"ast":null,"code":"import { useState, useRef, useEffect, useCallback } from 'react';\nexport var useRecursiveTimeout = function useRecursiveTimeout(callback, delay) {\n  var _useState = useState(false),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var stop = useCallback(function () {\n    return setIsRunning(false);\n  }, [setIsRunning]);\n  var play = useCallback(function () {\n    return setIsRunning(true);\n  }, [setIsRunning]);\n  var savedCallback = useRef(callback);\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    if (!isRunning) return;\n    var id = 0;\n\n    var tick = function tick() {\n      if (!isRunning) return clearTimeout(id);\n      savedCallback.current();\n      requestAnimationFrame(function () {\n        return id = setTimeout(tick, delay);\n      });\n    };\n\n    requestAnimationFrame(function () {\n      return id = setTimeout(tick, delay);\n    });\n    return function () {\n      if (id) clearTimeout(id);\n      stop();\n    };\n  }, [isRunning, delay, stop]);\n  return {\n    play: play,\n    stop: stop\n  };\n};","map":null,"metadata":{},"sourceType":"module"}