{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/index.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport Items from '../../../components/items/items-page/Items';\nimport { formatUrlToDbName } from '../../../lib/formatUrl';\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS($itemsCategory: String!) {\n    products(where: { product_title: $itemsCategory }) {\n      product_title\n      category: product_categories {\n        category_title: product_category\n        id\n        single_item: single_products(limit: 1) {\n          item_title\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ProductsCategoryPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS, {\n    variables: {\n      itemsCategory: formatUrlToDbName(query.products)\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  const products = data.products;\n  return /*#__PURE__*/_jsxDEV(Items, {\n    itemsCategory: query.products,\n    items: products\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n;","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/index.js"],"names":["gql","useQuery","Items","formatUrlToDbName","ALL_PRODUCTS","ProductsCategoryPage","query","data","error","loading","variables","itemsCategory","products","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAGA,MAAMC,YAAY,GAAGJ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAyC;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BR,QAAQ,CAACG,YAAD,EAAe;AACtDM,IAAAA,SAAS,EAAE;AACTC,MAAAA,aAAa,EAAER,iBAAiB,CAACG,KAAK,CAACM,QAAP;AADvB;AAD2C,GAAf,CAAzC;AAMA,MAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMD,QAAQ,GAAGL,IAAI,CAACK,QAAtB;AAEA,sBAAO,QAAC,KAAD;AAAO,IAAA,aAAa,EAAEN,KAAK,CAACM,QAA5B;AAAsC,IAAA,KAAK,EAAEA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAAA","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport Items from '../../../components/items/items-page/Items';\nimport { formatUrlToDbName } from '../../../lib/formatUrl';\n\n\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS($itemsCategory: String!) {\n    products(where: { product_title: $itemsCategory }) {\n      product_title\n      category: product_categories {\n        category_title: product_category\n        id\n        single_item: single_products(limit: 1) {\n          item_title\n          image {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProductsCategoryPage({ query }) {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS, {\n    variables: {\n      itemsCategory: formatUrlToDbName(query.products),\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const products = data.products;\n\n  return <Items itemsCategory={query.products} items={products} />;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}