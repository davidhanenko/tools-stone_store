{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport SubCategoryCollection from '../../../components/items/items-page/SubCategoryCollection';\nimport { formatUrlToDbName } from '../../../lib/formatUrl';\nconst ITEM = gql`\n  query ITEM($item: String!) {\n    category: productCategories(where: { product_category: $item }) {\n      category_title: product_category\n      id\n      single_item: single_products {\n        item_title\n        price\n        description\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\nexport default function ProductsPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ITEM, {\n    variables: {\n      item: formatUrlToDbName(query.collection)\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(SubCategoryCollection, {}), /*#__PURE__*/_jsx(SubCategoryCollection, {}), /*#__PURE__*/_jsx(SubCategoryCollection, {}), /*#__PURE__*/_jsx(SubCategoryCollection, {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}