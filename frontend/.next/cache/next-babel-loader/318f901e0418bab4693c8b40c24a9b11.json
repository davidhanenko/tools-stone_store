{"ast":null,"code":"import _objectDestructuringEmpty from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Work/A2Z/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/items/main-page/ItemsMainPage.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n   query PRODUCTS_MAIN_PAGE_QUERY($service: String) {\\n     services(where: { service: $service }) {\\n       items {\\n         id\\n         title\\n         category: items_categories(limit: 1) {\\n           single_item: single_items(limit: 1) {\\n             image {\\n               url\\n             }\\n           }\\n         }\\n       }\\n     }\\n   }\\n \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsMainPageStyles';\nvar PRODUCTS_MAIN_PAGE_QUERY = gql(_templateObject());\nexport default function ItemsMainPage(_ref) {\n  _s();\n\n  var _data$services$0$item;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useQuery = useQuery(PRODUCTS_MAIN_PAGE_QUERY, {\n    variables: {\n      service: 'products'\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  var SLIDE_COUNT = data === null || data === void 0 ? void 0 : (_data$services$0$item = data.services[0].items) === null || _data$services$0$item === void 0 ? void 0 : _data$services$0$item.length;\n  var slides = Array.from(Array(SLIDE_COUNT).keys()); // func from Embla Carousel docs\n\n  var itemsByIndex = function itemsByIndex(index) {\n    var _data$services$, _data$services$2, _data$services$2$item;\n\n    return data === null || data === void 0 ? void 0 : (_data$services$ = data.services[0]) === null || _data$services$ === void 0 ? void 0 : _data$services$.items[index % (data === null || data === void 0 ? void 0 : (_data$services$2 = data.services[0]) === null || _data$services$2 === void 0 ? void 0 : (_data$services$2$item = _data$services$2.items) === null || _data$services$2$item === void 0 ? void 0 : _data$services$2$item.length)];\n  };\n\n  return /*#__PURE__*/_jsxDEV(ItemsMainPageStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(ItemsSlider, {\n      slides: slides,\n      itemsByIndex: itemsByIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemsMainPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = ItemsMainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsMainPage\");","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/items/main-page/ItemsMainPage.js"],"names":["gql","useQuery","ItemsSlider","ItemsMainPageStyles","PRODUCTS_MAIN_PAGE_QUERY","ItemsMainPage","variables","service","data","error","loading","message","SLIDE_COUNT","services","items","length","slides","Array","from","keys","itemsByIndex","index"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEC,IAAMC,wBAAwB,GAAGJ,GAAH,mBAA9B;AAkBD,eAAe,SAASK,aAAT,OAA2B;AAAA;;AAAA;;AAAA;;AAAA,kBAEPJ,QAAQ,CAACG,wBAAD,EAA2B;AAClEE,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE;AADA;AADuD,GAA3B,CAFD;AAAA,MAEhCC,IAFgC,aAEhCA,IAFgC;AAAA,MAE1BC,KAF0B,aAE1BA,KAF0B;AAAA,MAEnBC,OAFmB,aAEnBA,OAFmB;;AAQxC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,MAAMC,WAAW,GAAGJ,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEK,QAAN,CAAe,CAAf,EAAkBC,KAArB,0DAAG,sBAAyBC,MAA7C;AAEA,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACL,WAAD,CAAL,CAAmBO,IAAnB,EAAX,CAAf,CAdwC,CAexC;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA;;AAAA,WAAIb,IAAJ,aAAIA,IAAJ,0CAAIA,IAAI,CAAEK,QAAN,CAAe,CAAf,CAAJ,oDAAI,gBAAmBC,KAAnB,CAAyBO,KAAK,IAAGb,IAAH,aAAGA,IAAH,2CAAGA,IAAI,CAAEK,QAAN,CAAe,CAAf,CAAH,8EAAG,iBAAmBC,KAAtB,0DAAG,sBAA0BC,MAA7B,CAA9B,CAAJ;AAAA,GAA1B;;AAEA,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,IAAI,iBAAI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEQ,MAArB;AAA6B,MAAA,YAAY,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxBuBf,a;UAEWJ,Q;;;KAFXI,a","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport ItemsSlider from '../../shared/sliders/items-slider/ItemsSlider';\nimport { ItemsMainPageStyles } from './ItemsMainPageStyles';\n\n const PRODUCTS_MAIN_PAGE_QUERY = gql`\n   query PRODUCTS_MAIN_PAGE_QUERY($service: String) {\n     services(where: { service: $service }) {\n       items {\n         id\n         title\n         category: items_categories(limit: 1) {\n           single_item: single_items(limit: 1) {\n             image {\n               url\n             }\n           }\n         }\n       }\n     }\n   }\n `;\n\nexport default function ItemsMainPage({}) {\n  \n  const { data, error, loading } = useQuery(PRODUCTS_MAIN_PAGE_QUERY, {\n    variables: {\n      service: 'products',\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n \n\n  const SLIDE_COUNT = data?.services[0].items?.length;\n\n  const slides = Array.from(Array(SLIDE_COUNT).keys());\n  // func from Embla Carousel docs\n  const itemsByIndex = index => data?.services[0]?.items[index % data?.services[0]?.items?.length];\n\n  return (\n    <ItemsMainPageStyles>\n      <h2>Products</h2>\n      {data && <ItemsSlider slides={slides} itemsByIndex={itemsByIndex} />}\n    </ItemsMainPageStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}