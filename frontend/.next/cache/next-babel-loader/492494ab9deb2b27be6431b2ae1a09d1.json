{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/components/Test.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport T from './T';\nexport const TEST = gql`\n  query TEST {\n    tests {\n      id\n      message\n      image {\n        id\n        url\n      }\n      photo {\n        id\n        url\n      }\n    }\n  }\n`;\nexport default function Test() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(TEST);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      zIndex: 1\n    },\n    children: data === null || data === void 0 ? void 0 : data.tests.map(t => /*#__PURE__*/_jsxDEV(T, {\n      test: t\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Test.js"],"names":["useQuery","gql","T","TEST","Test","data","error","loading","message","zIndex","tests","map","t","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,CAAP,MAAc,KAAd;AAGA,OAAO,MAAMC,IAAI,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,eAAe,SAASG,IAAT,GAAgB;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACG,IAAD,CAAzC;AAEA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAZ;AAAA,cACGJ,IADH,aACGA,IADH,uBACGA,IAAI,CAAEK,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,iBACf,QAAC,CAAD;AAAc,MAAA,IAAI,EAAEA;AAApB,OAAQA,CAAC,CAACC,EAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport T from './T';\n\n\nexport const TEST = gql`\n  query TEST {\n    tests {\n      id\n      message\n      image {\n        id\n        url\n      }\n      photo {\n        id\n        url\n      }\n    }\n  }\n`;\n\nexport default function Test() {\n  const { data, error, loading } = useQuery(TEST);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div style={{zIndex:1}}>\n      {data?.tests.map((t) => (\n        <T key={t.id} test={t} />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}