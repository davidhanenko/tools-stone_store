{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/index.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ItemsByCategory from '../../../components/items/items-page/items-by-category/ItemsByCategory';\nimport { formatUrlToDbName } from '../../../helpers/formatUrl';\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS($service: String!, $itemsCategory: String!) {\n    services(where: { service: $service }) {\n      items(where: { product_title: $itemsCategory }) {\n        items\n        category: items_categories {\n          category_title\n          id\n          single_item: single_items(limit: 1) {\n            item_title\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function ProductsCategoryPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS, {\n    variables: {\n      service: 'products',\n      itemsCategory: formatUrlToDbName(query.products)\n    }\n  });\n  console.log(data);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  const items = data.services.items;\n  return /*#__PURE__*/_jsxDEV(ItemsByCategory, {\n    items: items[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/pages/products/[products]/index.js"],"names":["gql","useQuery","ItemsByCategory","formatUrlToDbName","ALL_PRODUCTS","ProductsCategoryPage","query","data","error","loading","variables","service","itemsCategory","products","console","log","message","items","services"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,eAAP,MAA4B,wEAA5B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,MAAMC,YAAY,GAAGJ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA,eAAe,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAyC;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BR,QAAQ,CAACG,YAAD,EAAe;AACtDM,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,UADA;AAETC,MAAAA,aAAa,EAAET,iBAAiB,CAACG,KAAK,CAACO,QAAP;AAFvB;AAD2C,GAAf,CAAzC;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACQ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAMC,KAAK,GAAGV,IAAI,CAACW,QAAL,CAAcD,KAA5B;AAEA,sBAAO,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAEA,KAAK,CAAC,CAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nimport ItemsByCategory from '../../../components/items/items-page/items-by-category/ItemsByCategory';\nimport { formatUrlToDbName } from '../../../helpers/formatUrl';\n\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS($service: String!, $itemsCategory: String!) {\n    services(where: { service: $service }) {\n      items(where: { product_title: $itemsCategory }) {\n        items\n        category: items_categories {\n          category_title\n          id\n          single_item: single_items(limit: 1) {\n            item_title\n            image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProductsCategoryPage({ query }) {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS, {\n    variables: {\n      service: 'products',\n      itemsCategory: formatUrlToDbName(query.products)\n    },\n  });\n\n  console.log(data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  \n  const items = data.services.items;\n\n  return <ItemsByCategory items={items[0]} />;\n}\n"]},"metadata":{},"sourceType":"module"}