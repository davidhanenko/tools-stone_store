{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { formatUrlToDbName } from '../../../../helpers/formatUrl';\nimport SubCategoryCollection from '../../../../components/items/items-page/sub-category-collection/SubCategoryCollection';\nconst ITEMS_COLLECTION = gql`\n  query ITEMS_COLLECTION($collection: String!) {\n    items_category: itemsCategories(where: { category_title: $collection }) {\n      category: category_title\n      id\n      single_items {\n        id\n        item_title\n        price\n        description\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\nexport default function ProductsPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ITEMS_COLLECTION, {\n    variables: {\n      collection: formatUrlToDbName(query.collection)\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(SubCategoryCollection, {\n      itemsCollection: data === null || data === void 0 ? void 0 : data.items_category[0],\n      items: query.products,\n      collection: query.collection\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}