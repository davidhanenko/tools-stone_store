{"ast":null,"code":"import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport gql from 'graphql-tag';\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache(),\n  connectToDevTools: true\n});\nconst data = {\n  mPage: ''\n};\nclient.query({\n  query: gql`\n      {\n        mPage {\n          image_1 {\n            id\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `\n}).then(res => data.mPage = res.data.mPage);\nconsole.log(data); // export const media = [data?.image_1[0]?.url, data?.image_2[0]?.url];\n// console.log(media);\n// export const mediaByIndex = (index) => media[index % media.length];","map":{"version":3,"sources":["/Volumes/Files/Work/A2Z/frontend/components/Carousel/media/index.js"],"names":["useQuery","InMemoryCache","ApolloClient","gql","client","uri","cache","connectToDevTools","data","mPage","query","then","res","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIL,aAAJ,EAFuB;AAG9BM,EAAAA,iBAAiB,EAAE;AAHW,CAAjB,CAAf;AAKA,MAAMC,IAAI,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAb;AACAL,MAAM,CACHM,KADH,CACS;AACLA,EAAAA,KAAK,EAAEP,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdS,CADT,EAiBGQ,IAjBH,CAiBSC,GAAD,IAAUJ,IAAI,CAACC,KAAL,GAAaG,GAAG,CAACJ,IAAJ,CAASC,KAjBxC;AAmBAI,OAAO,CAACC,GAAR,CAAYN,IAAZ,E,CAEA;AACA;AACA","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { InMemoryCache } from '@apollo/client/cache';\nimport { ApolloClient } from '@apollo/client/core';\nimport gql from 'graphql-tag';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n});\nconst data = { mPage: '' };\nclient\n  .query({\n    query: gql`\n      {\n        mPage {\n          image_1 {\n            id\n            url\n          }\n          image_2 {\n            id\n            url\n          }\n        }\n      }\n    `,\n  })\n  .then((res) => (data.mPage = res.data.mPage));\n\nconsole.log(data);\n\n// export const media = [data?.image_1[0]?.url, data?.image_2[0]?.url];\n// console.log(media);\n// export const mediaByIndex = (index) => media[index % media.length];\n"]},"metadata":{},"sourceType":"module"}