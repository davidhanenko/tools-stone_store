{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nexport var useRecursiveTimeout = function useRecursiveTimeout(callback, delay) {\n  _s();\n\n  var _useState = useState(false),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var stop = useCallback(function () {\n    return setIsRunning(false);\n  }, [setIsRunning]);\n  var play = useCallback(function () {\n    return setIsRunning(true);\n  }, [setIsRunning]);\n  var savedCallback = useRef(callback);\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    if (!isRunning) return;\n    var id = 0;\n\n    var tick = function tick() {\n      if (!isRunning) return clearTimeout(id);\n      savedCallback.current();\n      requestAnimationFrame(function () {\n        return id = setTimeout(tick, delay);\n      });\n    };\n\n    requestAnimationFrame(function () {\n      return id = setTimeout(tick, delay);\n    });\n    return function () {\n      if (id) clearTimeout(id);\n      stop();\n    };\n  }, [isRunning, delay, stop]);\n  return {\n    play: play,\n    stop: stop\n  };\n};\n\n_s(useRecursiveTimeout, \"DjNcvXZnB5/72bWfnD+dzzPoprQ=\");","map":{"version":3,"sources":["/Volumes/Files/tools-stone_store/frontend/lib/useRecursiveTimeout.js"],"names":["useState","useRef","useEffect","useCallback","useRecursiveTimeout","callback","delay","isRunning","setIsRunning","stop","play","savedCallback","current","id","tick","clearTimeout","requestAnimationFrame","setTimeout"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAsCC,WAAtC,QAAyD,OAAzD;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD,EAAWC,KAAX,EAAqB;AAAA;;AAAA,kBACpBN,QAAQ,CAAC,KAAD,CADY;AAAA,MAC/CO,SAD+C;AAAA,MACpCC,YADoC;;AAEtD,MAAMC,IAAI,GAAGN,WAAW,CAAC;AAAA,WAAMK,YAAY,CAAC,KAAD,CAAlB;AAAA,GAAD,EAA4B,CAACA,YAAD,CAA5B,CAAxB;AACA,MAAME,IAAI,GAAGP,WAAW,CAAC;AAAA,WAAMK,YAAY,CAAC,IAAD,CAAlB;AAAA,GAAD,EAA2B,CAACA,YAAD,CAA3B,CAAxB;AACA,MAAMG,aAAa,GAAGV,MAAM,CAACI,QAAD,CAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,aAAa,CAACC,OAAd,GAAwBP,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACK,SAAL,EAAgB;AAChB,QAAIM,EAAE,GAAG,CAAT;;AAEA,QAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,UAAI,CAACP,SAAL,EAAgB,OAAOQ,YAAY,CAACF,EAAD,CAAnB;AAChBF,MAAAA,aAAa,CAACC,OAAd;AACAI,MAAAA,qBAAqB,CAAC;AAAA,eAAOH,EAAE,GAAGI,UAAU,CAACH,IAAD,EAAOR,KAAP,CAAtB;AAAA,OAAD,CAArB;AACD,KAJD;;AAKAU,IAAAA,qBAAqB,CAAC;AAAA,aAAOH,EAAE,GAAGI,UAAU,CAACH,IAAD,EAAOR,KAAP,CAAtB;AAAA,KAAD,CAArB;AAEA,WAAO,YAAM;AACX,UAAIO,EAAJ,EAAQE,YAAY,CAACF,EAAD,CAAZ;AACRJ,MAAAA,IAAI;AACL,KAHD;AAID,GAfQ,EAeN,CAACF,SAAD,EAAYD,KAAZ,EAAmBG,IAAnB,CAfM,CAAT;AAiBA,SAAO;AAAEC,IAAAA,IAAI,EAAJA,IAAF;AAAQD,IAAAA,IAAI,EAAJA;AAAR,GAAP;AACD,CA5BM;;GAAML,mB","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\nexport const useRecursiveTimeout = (callback, delay) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const stop = useCallback(() => setIsRunning(false), [setIsRunning]);\n  const play = useCallback(() => setIsRunning(true), [setIsRunning]);\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (!isRunning) return;\n    let id = 0;\n\n    const tick = () => {\n      if (!isRunning) return clearTimeout(id);\n      savedCallback.current();\n      requestAnimationFrame(() => (id = setTimeout(tick, delay)));\n    };\n    requestAnimationFrame(() => (id = setTimeout(tick, delay)));\n\n    return () => {\n      if (id) clearTimeout(id);\n      stop();\n    };\n  }, [isRunning, delay, stop]);\n\n  return { play, stop };\n};\n"]},"metadata":{},"sourceType":"module"}